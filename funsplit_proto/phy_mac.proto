syntax = "proto3";
package fs.phy_mac;

message srsran_ra_type2_t {
  uint32   riv = 1; 
  uint32   n_prb1a = 2;
  uint32   n_gap = 3;
  uint32   mode = 4;
}

message srsran_ra_type1_t {
  uint32   vrb_bitmask = 1;
  uint32   rbg_subset = 2;
  bool     shift = 3;
}

message srsran_ra_type0_t {
  uint32   rbg_bitmask = 1;
}

message srsran_dci_tb_t {
  uint32   mcs_idx = 1;
  int32    rv = 2;
  bool     ndi = 3;
  uint32   cw_idx = 4;
}

message srsran_dci_location_t {
  uint32    L = 1;   
  uint32    ncce = 2;
}

message srsran_dci_dl_t {
  bool                       tb_cw_swap = 1;
  bool                       pconf = 2;
  bool                       power_offset = 3;
  bool                       is_ra_order = 4;
  bool                       cif_present = 5;
  bool                       srs_request = 6;
  bool                       srs_request_present = 7;
  bool                       is_tdd = 8;
  bool                       is_dwpts = 9;
  bool                       sram_id = 10;
  uint32                     rnti = 11;
  uint32                     ue_cc_idx = 12;
  uint32                     pinfo = 13;
  uint32                     tpc_pucch = 14;
  uint32                     ra_preamble = 15;
  uint32                     ra_mask_idx = 16;
  uint32                     cif = 17;
  uint32                     pid = 18;
  uint32                     dai = 19;
  int32        format = 20;
  srsran_dci_location_t      location = 21;
  int32           alloc_type = 22;
  srsran_ra_type0_t          type0_alloc = 23;
  srsran_ra_type1_t          type1_alloc = 24;
  srsran_ra_type2_t          type2_alloc = 25;
  repeated srsran_dci_tb_t   tb = 26; // [SRSRAN_MAX_CODEWORDS]
}

message raw_buffer{
    bytes data = 1;
}

message srsran_softbuffer_tx_t {
  uint32             max_cb = 1;
  uint32             max_cb_size = 2;
  repeated raw_buffer buffer_b = 3; 
}

message dl_sched_grant_t {
  srsran_dci_dl_t                              dci = 1;
  repeated bytes                               data = 2;
  repeated srsran_softbuffer_tx_t   softbuffer_tx = 3;
  repeated uint32                               data_len = 4; // up to 2 values
}

message dl_sched_t {
  uint32                       cfi = 1;         
  uint32                       nof_grants = 2;  
  repeated dl_sched_grant_t    pdsch = 3;       //< DL Grants [MAX_GRANTS] = [64]
}

message dl_sched_list_t {
  repeated dl_sched_t list = 1;
}
