// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: phy_rrc_cfg_t.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_phy_5frrc_5fcfg_5ft_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_phy_5frrc_5fcfg_5ft_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ue_cfg_t.pb.h"
#include "cell_cfg_t.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_phy_5frrc_5fcfg_5ft_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_phy_5frrc_5fcfg_5ft_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_phy_5frrc_5fcfg_5ft_2eproto;
namespace fs {
namespace phy_rrc {
class phy_cfg_t;
class phy_cfg_tDefaultTypeInternal;
extern phy_cfg_tDefaultTypeInternal _phy_cfg_t_default_instance_;
class phy_rrc_cfg_list_t;
class phy_rrc_cfg_list_tDefaultTypeInternal;
extern phy_rrc_cfg_list_tDefaultTypeInternal _phy_rrc_cfg_list_t_default_instance_;
class phy_rrc_cfg_t;
class phy_rrc_cfg_tDefaultTypeInternal;
extern phy_rrc_cfg_tDefaultTypeInternal _phy_rrc_cfg_t_default_instance_;
class srsran_prach_cfg_t;
class srsran_prach_cfg_tDefaultTypeInternal;
extern srsran_prach_cfg_tDefaultTypeInternal _srsran_prach_cfg_t_default_instance_;
class srsran_pusch_cfg_t;
class srsran_pusch_cfg_tDefaultTypeInternal;
extern srsran_pusch_cfg_tDefaultTypeInternal _srsran_pusch_cfg_t_default_instance_;
class srsran_pusch_grant_t;
class srsran_pusch_grant_tDefaultTypeInternal;
extern srsran_pusch_grant_tDefaultTypeInternal _srsran_pusch_grant_t_default_instance_;
class srsran_refsignal_dmrs_pusch_cfg_t;
class srsran_refsignal_dmrs_pusch_cfg_tDefaultTypeInternal;
extern srsran_refsignal_dmrs_pusch_cfg_tDefaultTypeInternal _srsran_refsignal_dmrs_pusch_cfg_t_default_instance_;
class srsran_refsignal_srs_cfg_t;
class srsran_refsignal_srs_cfg_tDefaultTypeInternal;
extern srsran_refsignal_srs_cfg_tDefaultTypeInternal _srsran_refsignal_srs_cfg_t_default_instance_;
class srsran_tdd_config_t;
class srsran_tdd_config_tDefaultTypeInternal;
extern srsran_tdd_config_tDefaultTypeInternal _srsran_tdd_config_t_default_instance_;
class srsran_ue_ul_powerctrl_t;
class srsran_ue_ul_powerctrl_tDefaultTypeInternal;
extern srsran_ue_ul_powerctrl_tDefaultTypeInternal _srsran_ue_ul_powerctrl_t_default_instance_;
class srsran_ul_cfg_t;
class srsran_ul_cfg_tDefaultTypeInternal;
extern srsran_ul_cfg_tDefaultTypeInternal _srsran_ul_cfg_t_default_instance_;
}  // namespace phy_rrc
}  // namespace fs
PROTOBUF_NAMESPACE_OPEN
template<> ::fs::phy_rrc::phy_cfg_t* Arena::CreateMaybeMessage<::fs::phy_rrc::phy_cfg_t>(Arena*);
template<> ::fs::phy_rrc::phy_rrc_cfg_list_t* Arena::CreateMaybeMessage<::fs::phy_rrc::phy_rrc_cfg_list_t>(Arena*);
template<> ::fs::phy_rrc::phy_rrc_cfg_t* Arena::CreateMaybeMessage<::fs::phy_rrc::phy_rrc_cfg_t>(Arena*);
template<> ::fs::phy_rrc::srsran_prach_cfg_t* Arena::CreateMaybeMessage<::fs::phy_rrc::srsran_prach_cfg_t>(Arena*);
template<> ::fs::phy_rrc::srsran_pusch_cfg_t* Arena::CreateMaybeMessage<::fs::phy_rrc::srsran_pusch_cfg_t>(Arena*);
template<> ::fs::phy_rrc::srsran_pusch_grant_t* Arena::CreateMaybeMessage<::fs::phy_rrc::srsran_pusch_grant_t>(Arena*);
template<> ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* Arena::CreateMaybeMessage<::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t>(Arena*);
template<> ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* Arena::CreateMaybeMessage<::fs::phy_rrc::srsran_refsignal_srs_cfg_t>(Arena*);
template<> ::fs::phy_rrc::srsran_tdd_config_t* Arena::CreateMaybeMessage<::fs::phy_rrc::srsran_tdd_config_t>(Arena*);
template<> ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* Arena::CreateMaybeMessage<::fs::phy_rrc::srsran_ue_ul_powerctrl_t>(Arena*);
template<> ::fs::phy_rrc::srsran_ul_cfg_t* Arena::CreateMaybeMessage<::fs::phy_rrc::srsran_ul_cfg_t>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace fs {
namespace phy_rrc {

// ===================================================================

class srsran_tdd_config_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fs.phy_rrc.srsran_tdd_config_t) */ {
 public:
  inline srsran_tdd_config_t() : srsran_tdd_config_t(nullptr) {};
  virtual ~srsran_tdd_config_t();

  srsran_tdd_config_t(const srsran_tdd_config_t& from);
  srsran_tdd_config_t(srsran_tdd_config_t&& from) noexcept
    : srsran_tdd_config_t() {
    *this = ::std::move(from);
  }

  inline srsran_tdd_config_t& operator=(const srsran_tdd_config_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline srsran_tdd_config_t& operator=(srsran_tdd_config_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const srsran_tdd_config_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const srsran_tdd_config_t* internal_default_instance() {
    return reinterpret_cast<const srsran_tdd_config_t*>(
               &_srsran_tdd_config_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(srsran_tdd_config_t& a, srsran_tdd_config_t& b) {
    a.Swap(&b);
  }
  inline void Swap(srsran_tdd_config_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(srsran_tdd_config_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline srsran_tdd_config_t* New() const final {
    return CreateMaybeMessage<srsran_tdd_config_t>(nullptr);
  }

  srsran_tdd_config_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<srsran_tdd_config_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const srsran_tdd_config_t& from);
  void MergeFrom(const srsran_tdd_config_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(srsran_tdd_config_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fs.phy_rrc.srsran_tdd_config_t";
  }
  protected:
  explicit srsran_tdd_config_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto);
    return ::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfiguredFieldNumber = 1,
    kSfConfigFieldNumber = 2,
    kSsConfigFieldNumber = 3,
  };
  // bool configured = 1;
  void clear_configured();
  bool configured() const;
  void set_configured(bool value);
  private:
  bool _internal_configured() const;
  void _internal_set_configured(bool value);
  public:

  // uint32 sf_config = 2;
  void clear_sf_config();
  ::PROTOBUF_NAMESPACE_ID::uint32 sf_config() const;
  void set_sf_config(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sf_config() const;
  void _internal_set_sf_config(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 ss_config = 3;
  void clear_ss_config();
  ::PROTOBUF_NAMESPACE_ID::uint32 ss_config() const;
  void set_ss_config(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ss_config() const;
  void _internal_set_ss_config(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:fs.phy_rrc.srsran_tdd_config_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool configured_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sf_config_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ss_config_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phy_5frrc_5fcfg_5ft_2eproto;
};
// -------------------------------------------------------------------

class srsran_prach_cfg_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fs.phy_rrc.srsran_prach_cfg_t) */ {
 public:
  inline srsran_prach_cfg_t() : srsran_prach_cfg_t(nullptr) {};
  virtual ~srsran_prach_cfg_t();

  srsran_prach_cfg_t(const srsran_prach_cfg_t& from);
  srsran_prach_cfg_t(srsran_prach_cfg_t&& from) noexcept
    : srsran_prach_cfg_t() {
    *this = ::std::move(from);
  }

  inline srsran_prach_cfg_t& operator=(const srsran_prach_cfg_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline srsran_prach_cfg_t& operator=(srsran_prach_cfg_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const srsran_prach_cfg_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const srsran_prach_cfg_t* internal_default_instance() {
    return reinterpret_cast<const srsran_prach_cfg_t*>(
               &_srsran_prach_cfg_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(srsran_prach_cfg_t& a, srsran_prach_cfg_t& b) {
    a.Swap(&b);
  }
  inline void Swap(srsran_prach_cfg_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(srsran_prach_cfg_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline srsran_prach_cfg_t* New() const final {
    return CreateMaybeMessage<srsran_prach_cfg_t>(nullptr);
  }

  srsran_prach_cfg_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<srsran_prach_cfg_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const srsran_prach_cfg_t& from);
  void MergeFrom(const srsran_prach_cfg_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(srsran_prach_cfg_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fs.phy_rrc.srsran_prach_cfg_t";
  }
  protected:
  explicit srsran_prach_cfg_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto);
    return ::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTddConfigFieldNumber = 10,
    kIsNrFieldNumber = 1,
    kHsFlagFieldNumber = 2,
    kEnableSuccessiveCancellationFieldNumber = 3,
    kEnableFreqDomainOffsetCalcFieldNumber = 4,
    kConfigIdxFieldNumber = 5,
    kRootSeqIdxFieldNumber = 6,
    kZeroCorrZoneFieldNumber = 7,
    kFreqOffsetFieldNumber = 8,
    kNumRaPreamblesFieldNumber = 9,
  };
  // .fs.phy_rrc.srsran_tdd_config_t tdd_config = 10;
  bool has_tdd_config() const;
  private:
  bool _internal_has_tdd_config() const;
  public:
  void clear_tdd_config();
  const ::fs::phy_rrc::srsran_tdd_config_t& tdd_config() const;
  ::fs::phy_rrc::srsran_tdd_config_t* release_tdd_config();
  ::fs::phy_rrc::srsran_tdd_config_t* mutable_tdd_config();
  void set_allocated_tdd_config(::fs::phy_rrc::srsran_tdd_config_t* tdd_config);
  private:
  const ::fs::phy_rrc::srsran_tdd_config_t& _internal_tdd_config() const;
  ::fs::phy_rrc::srsran_tdd_config_t* _internal_mutable_tdd_config();
  public:
  void unsafe_arena_set_allocated_tdd_config(
      ::fs::phy_rrc::srsran_tdd_config_t* tdd_config);
  ::fs::phy_rrc::srsran_tdd_config_t* unsafe_arena_release_tdd_config();

  // bool is_nr = 1;
  void clear_is_nr();
  bool is_nr() const;
  void set_is_nr(bool value);
  private:
  bool _internal_is_nr() const;
  void _internal_set_is_nr(bool value);
  public:

  // bool hs_flag = 2;
  void clear_hs_flag();
  bool hs_flag() const;
  void set_hs_flag(bool value);
  private:
  bool _internal_hs_flag() const;
  void _internal_set_hs_flag(bool value);
  public:

  // bool enable_successive_cancellation = 3;
  void clear_enable_successive_cancellation();
  bool enable_successive_cancellation() const;
  void set_enable_successive_cancellation(bool value);
  private:
  bool _internal_enable_successive_cancellation() const;
  void _internal_set_enable_successive_cancellation(bool value);
  public:

  // bool enable_freq_domain_offset_calc = 4;
  void clear_enable_freq_domain_offset_calc();
  bool enable_freq_domain_offset_calc() const;
  void set_enable_freq_domain_offset_calc(bool value);
  private:
  bool _internal_enable_freq_domain_offset_calc() const;
  void _internal_set_enable_freq_domain_offset_calc(bool value);
  public:

  // uint32 config_idx = 5;
  void clear_config_idx();
  ::PROTOBUF_NAMESPACE_ID::uint32 config_idx() const;
  void set_config_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_config_idx() const;
  void _internal_set_config_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 root_seq_idx = 6;
  void clear_root_seq_idx();
  ::PROTOBUF_NAMESPACE_ID::uint32 root_seq_idx() const;
  void set_root_seq_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_root_seq_idx() const;
  void _internal_set_root_seq_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 zero_corr_zone = 7;
  void clear_zero_corr_zone();
  ::PROTOBUF_NAMESPACE_ID::uint32 zero_corr_zone() const;
  void set_zero_corr_zone(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_zero_corr_zone() const;
  void _internal_set_zero_corr_zone(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 freq_offset = 8;
  void clear_freq_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 freq_offset() const;
  void set_freq_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_freq_offset() const;
  void _internal_set_freq_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 num_ra_preambles = 9;
  void clear_num_ra_preambles();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_ra_preambles() const;
  void set_num_ra_preambles(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_ra_preambles() const;
  void _internal_set_num_ra_preambles(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:fs.phy_rrc.srsran_prach_cfg_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::fs::phy_rrc::srsran_tdd_config_t* tdd_config_;
  bool is_nr_;
  bool hs_flag_;
  bool enable_successive_cancellation_;
  bool enable_freq_domain_offset_calc_;
  ::PROTOBUF_NAMESPACE_ID::uint32 config_idx_;
  ::PROTOBUF_NAMESPACE_ID::uint32 root_seq_idx_;
  ::PROTOBUF_NAMESPACE_ID::uint32 zero_corr_zone_;
  ::PROTOBUF_NAMESPACE_ID::uint32 freq_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_ra_preambles_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phy_5frrc_5fcfg_5ft_2eproto;
};
// -------------------------------------------------------------------

class srsran_refsignal_srs_cfg_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fs.phy_rrc.srsran_refsignal_srs_cfg_t) */ {
 public:
  inline srsran_refsignal_srs_cfg_t() : srsran_refsignal_srs_cfg_t(nullptr) {};
  virtual ~srsran_refsignal_srs_cfg_t();

  srsran_refsignal_srs_cfg_t(const srsran_refsignal_srs_cfg_t& from);
  srsran_refsignal_srs_cfg_t(srsran_refsignal_srs_cfg_t&& from) noexcept
    : srsran_refsignal_srs_cfg_t() {
    *this = ::std::move(from);
  }

  inline srsran_refsignal_srs_cfg_t& operator=(const srsran_refsignal_srs_cfg_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline srsran_refsignal_srs_cfg_t& operator=(srsran_refsignal_srs_cfg_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const srsran_refsignal_srs_cfg_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const srsran_refsignal_srs_cfg_t* internal_default_instance() {
    return reinterpret_cast<const srsran_refsignal_srs_cfg_t*>(
               &_srsran_refsignal_srs_cfg_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(srsran_refsignal_srs_cfg_t& a, srsran_refsignal_srs_cfg_t& b) {
    a.Swap(&b);
  }
  inline void Swap(srsran_refsignal_srs_cfg_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(srsran_refsignal_srs_cfg_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline srsran_refsignal_srs_cfg_t* New() const final {
    return CreateMaybeMessage<srsran_refsignal_srs_cfg_t>(nullptr);
  }

  srsran_refsignal_srs_cfg_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<srsran_refsignal_srs_cfg_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const srsran_refsignal_srs_cfg_t& from);
  void MergeFrom(const srsran_refsignal_srs_cfg_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(srsran_refsignal_srs_cfg_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fs.phy_rrc.srsran_refsignal_srs_cfg_t";
  }
  protected:
  explicit srsran_refsignal_srs_cfg_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto);
    return ::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSimulAckFieldNumber = 1,
    kDedicatedEnabledFieldNumber = 2,
    kCommonEnabledFieldNumber = 3,
    kConfiguredFieldNumber = 4,
    kSubframeConfigFieldNumber = 5,
    kBwCfgFieldNumber = 6,
    kBFieldNumber = 7,
    kBHopFieldNumber = 8,
    kNSrsFieldNumber = 9,
    kISrsFieldNumber = 10,
    kKTcFieldNumber = 11,
    kNRrcFieldNumber = 12,
  };
  // bool simul_ack = 1;
  void clear_simul_ack();
  bool simul_ack() const;
  void set_simul_ack(bool value);
  private:
  bool _internal_simul_ack() const;
  void _internal_set_simul_ack(bool value);
  public:

  // bool dedicated_enabled = 2;
  void clear_dedicated_enabled();
  bool dedicated_enabled() const;
  void set_dedicated_enabled(bool value);
  private:
  bool _internal_dedicated_enabled() const;
  void _internal_set_dedicated_enabled(bool value);
  public:

  // bool common_enabled = 3;
  void clear_common_enabled();
  bool common_enabled() const;
  void set_common_enabled(bool value);
  private:
  bool _internal_common_enabled() const;
  void _internal_set_common_enabled(bool value);
  public:

  // bool configured = 4;
  void clear_configured();
  bool configured() const;
  void set_configured(bool value);
  private:
  bool _internal_configured() const;
  void _internal_set_configured(bool value);
  public:

  // uint32 subframe_config = 5;
  void clear_subframe_config();
  ::PROTOBUF_NAMESPACE_ID::uint32 subframe_config() const;
  void set_subframe_config(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subframe_config() const;
  void _internal_set_subframe_config(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 bw_cfg = 6;
  void clear_bw_cfg();
  ::PROTOBUF_NAMESPACE_ID::uint32 bw_cfg() const;
  void set_bw_cfg(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bw_cfg() const;
  void _internal_set_bw_cfg(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 B = 7;
  void clear_b();
  ::PROTOBUF_NAMESPACE_ID::uint32 b() const;
  void set_b(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_b() const;
  void _internal_set_b(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 b_hop = 8;
  void clear_b_hop();
  ::PROTOBUF_NAMESPACE_ID::uint32 b_hop() const;
  void set_b_hop(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_b_hop() const;
  void _internal_set_b_hop(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 n_srs = 9;
  void clear_n_srs();
  ::PROTOBUF_NAMESPACE_ID::uint32 n_srs() const;
  void set_n_srs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_n_srs() const;
  void _internal_set_n_srs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 I_srs = 10;
  void clear_i_srs();
  ::PROTOBUF_NAMESPACE_ID::uint32 i_srs() const;
  void set_i_srs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_i_srs() const;
  void _internal_set_i_srs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 k_tc = 11;
  void clear_k_tc();
  ::PROTOBUF_NAMESPACE_ID::uint32 k_tc() const;
  void set_k_tc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_k_tc() const;
  void _internal_set_k_tc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 n_rrc = 12;
  void clear_n_rrc();
  ::PROTOBUF_NAMESPACE_ID::uint32 n_rrc() const;
  void set_n_rrc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_n_rrc() const;
  void _internal_set_n_rrc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:fs.phy_rrc.srsran_refsignal_srs_cfg_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool simul_ack_;
  bool dedicated_enabled_;
  bool common_enabled_;
  bool configured_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subframe_config_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bw_cfg_;
  ::PROTOBUF_NAMESPACE_ID::uint32 b_;
  ::PROTOBUF_NAMESPACE_ID::uint32 b_hop_;
  ::PROTOBUF_NAMESPACE_ID::uint32 n_srs_;
  ::PROTOBUF_NAMESPACE_ID::uint32 i_srs_;
  ::PROTOBUF_NAMESPACE_ID::uint32 k_tc_;
  ::PROTOBUF_NAMESPACE_ID::uint32 n_rrc_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phy_5frrc_5fcfg_5ft_2eproto;
};
// -------------------------------------------------------------------

class srsran_refsignal_dmrs_pusch_cfg_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t) */ {
 public:
  inline srsran_refsignal_dmrs_pusch_cfg_t() : srsran_refsignal_dmrs_pusch_cfg_t(nullptr) {};
  virtual ~srsran_refsignal_dmrs_pusch_cfg_t();

  srsran_refsignal_dmrs_pusch_cfg_t(const srsran_refsignal_dmrs_pusch_cfg_t& from);
  srsran_refsignal_dmrs_pusch_cfg_t(srsran_refsignal_dmrs_pusch_cfg_t&& from) noexcept
    : srsran_refsignal_dmrs_pusch_cfg_t() {
    *this = ::std::move(from);
  }

  inline srsran_refsignal_dmrs_pusch_cfg_t& operator=(const srsran_refsignal_dmrs_pusch_cfg_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline srsran_refsignal_dmrs_pusch_cfg_t& operator=(srsran_refsignal_dmrs_pusch_cfg_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const srsran_refsignal_dmrs_pusch_cfg_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const srsran_refsignal_dmrs_pusch_cfg_t* internal_default_instance() {
    return reinterpret_cast<const srsran_refsignal_dmrs_pusch_cfg_t*>(
               &_srsran_refsignal_dmrs_pusch_cfg_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(srsran_refsignal_dmrs_pusch_cfg_t& a, srsran_refsignal_dmrs_pusch_cfg_t& b) {
    a.Swap(&b);
  }
  inline void Swap(srsran_refsignal_dmrs_pusch_cfg_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(srsran_refsignal_dmrs_pusch_cfg_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline srsran_refsignal_dmrs_pusch_cfg_t* New() const final {
    return CreateMaybeMessage<srsran_refsignal_dmrs_pusch_cfg_t>(nullptr);
  }

  srsran_refsignal_dmrs_pusch_cfg_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<srsran_refsignal_dmrs_pusch_cfg_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const srsran_refsignal_dmrs_pusch_cfg_t& from);
  void MergeFrom(const srsran_refsignal_dmrs_pusch_cfg_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(srsran_refsignal_dmrs_pusch_cfg_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t";
  }
  protected:
  explicit srsran_refsignal_dmrs_pusch_cfg_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto);
    return ::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGroupHoppingEnFieldNumber = 1,
    kSequenceHoppingEnFieldNumber = 2,
    kCyclicShiftFieldNumber = 3,
    kDeltaSsFieldNumber = 4,
  };
  // bool group_hopping_en = 1;
  void clear_group_hopping_en();
  bool group_hopping_en() const;
  void set_group_hopping_en(bool value);
  private:
  bool _internal_group_hopping_en() const;
  void _internal_set_group_hopping_en(bool value);
  public:

  // bool sequence_hopping_en = 2;
  void clear_sequence_hopping_en();
  bool sequence_hopping_en() const;
  void set_sequence_hopping_en(bool value);
  private:
  bool _internal_sequence_hopping_en() const;
  void _internal_set_sequence_hopping_en(bool value);
  public:

  // uint32 cyclic_shift = 3;
  void clear_cyclic_shift();
  ::PROTOBUF_NAMESPACE_ID::uint32 cyclic_shift() const;
  void set_cyclic_shift(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cyclic_shift() const;
  void _internal_set_cyclic_shift(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 delta_ss = 4;
  void clear_delta_ss();
  ::PROTOBUF_NAMESPACE_ID::uint32 delta_ss() const;
  void set_delta_ss(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_delta_ss() const;
  void _internal_set_delta_ss(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool group_hopping_en_;
  bool sequence_hopping_en_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cyclic_shift_;
  ::PROTOBUF_NAMESPACE_ID::uint32 delta_ss_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phy_5frrc_5fcfg_5ft_2eproto;
};
// -------------------------------------------------------------------

class srsran_ue_ul_powerctrl_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fs.phy_rrc.srsran_ue_ul_powerctrl_t) */ {
 public:
  inline srsran_ue_ul_powerctrl_t() : srsran_ue_ul_powerctrl_t(nullptr) {};
  virtual ~srsran_ue_ul_powerctrl_t();

  srsran_ue_ul_powerctrl_t(const srsran_ue_ul_powerctrl_t& from);
  srsran_ue_ul_powerctrl_t(srsran_ue_ul_powerctrl_t&& from) noexcept
    : srsran_ue_ul_powerctrl_t() {
    *this = ::std::move(from);
  }

  inline srsran_ue_ul_powerctrl_t& operator=(const srsran_ue_ul_powerctrl_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline srsran_ue_ul_powerctrl_t& operator=(srsran_ue_ul_powerctrl_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const srsran_ue_ul_powerctrl_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const srsran_ue_ul_powerctrl_t* internal_default_instance() {
    return reinterpret_cast<const srsran_ue_ul_powerctrl_t*>(
               &_srsran_ue_ul_powerctrl_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(srsran_ue_ul_powerctrl_t& a, srsran_ue_ul_powerctrl_t& b) {
    a.Swap(&b);
  }
  inline void Swap(srsran_ue_ul_powerctrl_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(srsran_ue_ul_powerctrl_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline srsran_ue_ul_powerctrl_t* New() const final {
    return CreateMaybeMessage<srsran_ue_ul_powerctrl_t>(nullptr);
  }

  srsran_ue_ul_powerctrl_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<srsran_ue_ul_powerctrl_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const srsran_ue_ul_powerctrl_t& from);
  void MergeFrom(const srsran_ue_ul_powerctrl_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(srsran_ue_ul_powerctrl_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fs.phy_rrc.srsran_ue_ul_powerctrl_t";
  }
  protected:
  explicit srsran_ue_ul_powerctrl_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto);
    return ::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeltaFPucchFieldNumber = 10,
    kDeltaMcsBasedFieldNumber = 1,
    kAccEnabledFieldNumber = 2,
    kP0NominalPuschFieldNumber = 3,
    kAlphaFieldNumber = 4,
    kP0NominalPucchFieldNumber = 5,
    kDeltaPreambleMsg3FieldNumber = 6,
    kP0UePuschFieldNumber = 7,
    kP0UePucchFieldNumber = 8,
    kPSrsOffsetFieldNumber = 9,
  };
  // repeated float delta_f_pucch = 10;
  int delta_f_pucch_size() const;
  private:
  int _internal_delta_f_pucch_size() const;
  public:
  void clear_delta_f_pucch();
  private:
  float _internal_delta_f_pucch(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_delta_f_pucch() const;
  void _internal_add_delta_f_pucch(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_delta_f_pucch();
  public:
  float delta_f_pucch(int index) const;
  void set_delta_f_pucch(int index, float value);
  void add_delta_f_pucch(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      delta_f_pucch() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_delta_f_pucch();

  // bool delta_mcs_based = 1;
  void clear_delta_mcs_based();
  bool delta_mcs_based() const;
  void set_delta_mcs_based(bool value);
  private:
  bool _internal_delta_mcs_based() const;
  void _internal_set_delta_mcs_based(bool value);
  public:

  // bool acc_enabled = 2;
  void clear_acc_enabled();
  bool acc_enabled() const;
  void set_acc_enabled(bool value);
  private:
  bool _internal_acc_enabled() const;
  void _internal_set_acc_enabled(bool value);
  public:

  // float p0_nominal_pusch = 3;
  void clear_p0_nominal_pusch();
  float p0_nominal_pusch() const;
  void set_p0_nominal_pusch(float value);
  private:
  float _internal_p0_nominal_pusch() const;
  void _internal_set_p0_nominal_pusch(float value);
  public:

  // float alpha = 4;
  void clear_alpha();
  float alpha() const;
  void set_alpha(float value);
  private:
  float _internal_alpha() const;
  void _internal_set_alpha(float value);
  public:

  // float p0_nominal_pucch = 5;
  void clear_p0_nominal_pucch();
  float p0_nominal_pucch() const;
  void set_p0_nominal_pucch(float value);
  private:
  float _internal_p0_nominal_pucch() const;
  void _internal_set_p0_nominal_pucch(float value);
  public:

  // float delta_preamble_msg3 = 6;
  void clear_delta_preamble_msg3();
  float delta_preamble_msg3() const;
  void set_delta_preamble_msg3(float value);
  private:
  float _internal_delta_preamble_msg3() const;
  void _internal_set_delta_preamble_msg3(float value);
  public:

  // float p0_ue_pusch = 7;
  void clear_p0_ue_pusch();
  float p0_ue_pusch() const;
  void set_p0_ue_pusch(float value);
  private:
  float _internal_p0_ue_pusch() const;
  void _internal_set_p0_ue_pusch(float value);
  public:

  // float p0_ue_pucch = 8;
  void clear_p0_ue_pucch();
  float p0_ue_pucch() const;
  void set_p0_ue_pucch(float value);
  private:
  float _internal_p0_ue_pucch() const;
  void _internal_set_p0_ue_pucch(float value);
  public:

  // float p_srs_offset = 9;
  void clear_p_srs_offset();
  float p_srs_offset() const;
  void set_p_srs_offset(float value);
  private:
  float _internal_p_srs_offset() const;
  void _internal_set_p_srs_offset(float value);
  public:

  // @@protoc_insertion_point(class_scope:fs.phy_rrc.srsran_ue_ul_powerctrl_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > delta_f_pucch_;
  mutable std::atomic<int> _delta_f_pucch_cached_byte_size_;
  bool delta_mcs_based_;
  bool acc_enabled_;
  float p0_nominal_pusch_;
  float alpha_;
  float p0_nominal_pucch_;
  float delta_preamble_msg3_;
  float p0_ue_pusch_;
  float p0_ue_pucch_;
  float p_srs_offset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phy_5frrc_5fcfg_5ft_2eproto;
};
// -------------------------------------------------------------------

class srsran_pusch_grant_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fs.phy_rrc.srsran_pusch_grant_t) */ {
 public:
  inline srsran_pusch_grant_t() : srsran_pusch_grant_t(nullptr) {};
  virtual ~srsran_pusch_grant_t();

  srsran_pusch_grant_t(const srsran_pusch_grant_t& from);
  srsran_pusch_grant_t(srsran_pusch_grant_t&& from) noexcept
    : srsran_pusch_grant_t() {
    *this = ::std::move(from);
  }

  inline srsran_pusch_grant_t& operator=(const srsran_pusch_grant_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline srsran_pusch_grant_t& operator=(srsran_pusch_grant_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const srsran_pusch_grant_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const srsran_pusch_grant_t* internal_default_instance() {
    return reinterpret_cast<const srsran_pusch_grant_t*>(
               &_srsran_pusch_grant_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(srsran_pusch_grant_t& a, srsran_pusch_grant_t& b) {
    a.Swap(&b);
  }
  inline void Swap(srsran_pusch_grant_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(srsran_pusch_grant_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline srsran_pusch_grant_t* New() const final {
    return CreateMaybeMessage<srsran_pusch_grant_t>(nullptr);
  }

  srsran_pusch_grant_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<srsran_pusch_grant_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const srsran_pusch_grant_t& from);
  void MergeFrom(const srsran_pusch_grant_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(srsran_pusch_grant_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fs.phy_rrc.srsran_pusch_grant_t";
  }
  protected:
  explicit srsran_pusch_grant_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto);
    return ::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNPrbFieldNumber = 9,
    kNPrbTildeFieldNumber = 10,
    kTbFieldNumber = 7,
    kLastTbFieldNumber = 8,
    kIsRarFieldNumber = 1,
    kNDmrsFieldNumber = 2,
    kLPrbFieldNumber = 3,
    kFreqHoppingFieldNumber = 4,
    kNofReFieldNumber = 5,
    kNofSymbFieldNumber = 6,
  };
  // repeated uint32 n_prb = 9;
  int n_prb_size() const;
  private:
  int _internal_n_prb_size() const;
  public:
  void clear_n_prb();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_n_prb(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_n_prb() const;
  void _internal_add_n_prb(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_n_prb();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 n_prb(int index) const;
  void set_n_prb(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_n_prb(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      n_prb() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_n_prb();

  // repeated uint32 n_prb_tilde = 10;
  int n_prb_tilde_size() const;
  private:
  int _internal_n_prb_tilde_size() const;
  public:
  void clear_n_prb_tilde();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_n_prb_tilde(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_n_prb_tilde() const;
  void _internal_add_n_prb_tilde(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_n_prb_tilde();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 n_prb_tilde(int index) const;
  void set_n_prb_tilde(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_n_prb_tilde(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      n_prb_tilde() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_n_prb_tilde();

  // .fs.mac_rrc.srsran_ra_tb_t tb = 7;
  bool has_tb() const;
  private:
  bool _internal_has_tb() const;
  public:
  void clear_tb();
  const ::fs::mac_rrc::srsran_ra_tb_t& tb() const;
  ::fs::mac_rrc::srsran_ra_tb_t* release_tb();
  ::fs::mac_rrc::srsran_ra_tb_t* mutable_tb();
  void set_allocated_tb(::fs::mac_rrc::srsran_ra_tb_t* tb);
  private:
  const ::fs::mac_rrc::srsran_ra_tb_t& _internal_tb() const;
  ::fs::mac_rrc::srsran_ra_tb_t* _internal_mutable_tb();
  public:
  void unsafe_arena_set_allocated_tb(
      ::fs::mac_rrc::srsran_ra_tb_t* tb);
  ::fs::mac_rrc::srsran_ra_tb_t* unsafe_arena_release_tb();

  // .fs.mac_rrc.srsran_ra_tb_t last_tb = 8;
  bool has_last_tb() const;
  private:
  bool _internal_has_last_tb() const;
  public:
  void clear_last_tb();
  const ::fs::mac_rrc::srsran_ra_tb_t& last_tb() const;
  ::fs::mac_rrc::srsran_ra_tb_t* release_last_tb();
  ::fs::mac_rrc::srsran_ra_tb_t* mutable_last_tb();
  void set_allocated_last_tb(::fs::mac_rrc::srsran_ra_tb_t* last_tb);
  private:
  const ::fs::mac_rrc::srsran_ra_tb_t& _internal_last_tb() const;
  ::fs::mac_rrc::srsran_ra_tb_t* _internal_mutable_last_tb();
  public:
  void unsafe_arena_set_allocated_last_tb(
      ::fs::mac_rrc::srsran_ra_tb_t* last_tb);
  ::fs::mac_rrc::srsran_ra_tb_t* unsafe_arena_release_last_tb();

  // bool is_rar = 1;
  void clear_is_rar();
  bool is_rar() const;
  void set_is_rar(bool value);
  private:
  bool _internal_is_rar() const;
  void _internal_set_is_rar(bool value);
  public:

  // uint32 n_dmrs = 2;
  void clear_n_dmrs();
  ::PROTOBUF_NAMESPACE_ID::uint32 n_dmrs() const;
  void set_n_dmrs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_n_dmrs() const;
  void _internal_set_n_dmrs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 L_prb = 3;
  void clear_l_prb();
  ::PROTOBUF_NAMESPACE_ID::uint32 l_prb() const;
  void set_l_prb(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_l_prb() const;
  void _internal_set_l_prb(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 freq_hopping = 4;
  void clear_freq_hopping();
  ::PROTOBUF_NAMESPACE_ID::uint32 freq_hopping() const;
  void set_freq_hopping(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_freq_hopping() const;
  void _internal_set_freq_hopping(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 nof_re = 5;
  void clear_nof_re();
  ::PROTOBUF_NAMESPACE_ID::uint32 nof_re() const;
  void set_nof_re(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_nof_re() const;
  void _internal_set_nof_re(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 nof_symb = 6;
  void clear_nof_symb();
  ::PROTOBUF_NAMESPACE_ID::uint32 nof_symb() const;
  void set_nof_symb(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_nof_symb() const;
  void _internal_set_nof_symb(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:fs.phy_rrc.srsran_pusch_grant_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > n_prb_;
  mutable std::atomic<int> _n_prb_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > n_prb_tilde_;
  mutable std::atomic<int> _n_prb_tilde_cached_byte_size_;
  ::fs::mac_rrc::srsran_ra_tb_t* tb_;
  ::fs::mac_rrc::srsran_ra_tb_t* last_tb_;
  bool is_rar_;
  ::PROTOBUF_NAMESPACE_ID::uint32 n_dmrs_;
  ::PROTOBUF_NAMESPACE_ID::uint32 l_prb_;
  ::PROTOBUF_NAMESPACE_ID::uint32 freq_hopping_;
  ::PROTOBUF_NAMESPACE_ID::uint32 nof_re_;
  ::PROTOBUF_NAMESPACE_ID::uint32 nof_symb_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phy_5frrc_5fcfg_5ft_2eproto;
};
// -------------------------------------------------------------------

class srsran_pusch_cfg_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fs.phy_rrc.srsran_pusch_cfg_t) */ {
 public:
  inline srsran_pusch_cfg_t() : srsran_pusch_cfg_t(nullptr) {};
  virtual ~srsran_pusch_cfg_t();

  srsran_pusch_cfg_t(const srsran_pusch_cfg_t& from);
  srsran_pusch_cfg_t(srsran_pusch_cfg_t&& from) noexcept
    : srsran_pusch_cfg_t() {
    *this = ::std::move(from);
  }

  inline srsran_pusch_cfg_t& operator=(const srsran_pusch_cfg_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline srsran_pusch_cfg_t& operator=(srsran_pusch_cfg_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const srsran_pusch_cfg_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const srsran_pusch_cfg_t* internal_default_instance() {
    return reinterpret_cast<const srsran_pusch_cfg_t*>(
               &_srsran_pusch_cfg_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(srsran_pusch_cfg_t& a, srsran_pusch_cfg_t& b) {
    a.Swap(&b);
  }
  inline void Swap(srsran_pusch_cfg_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(srsran_pusch_cfg_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline srsran_pusch_cfg_t* New() const final {
    return CreateMaybeMessage<srsran_pusch_cfg_t>(nullptr);
  }

  srsran_pusch_cfg_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<srsran_pusch_cfg_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const srsran_pusch_cfg_t& from);
  void MergeFrom(const srsran_pusch_cfg_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(srsran_pusch_cfg_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fs.phy_rrc.srsran_pusch_cfg_t";
  }
  protected:
  explicit srsran_pusch_cfg_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto);
    return ::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTxFieldNumber = 16,
    kRxFieldNumber = 17,
    kUciCfgFieldNumber = 13,
    kUciOffsetFieldNumber = 14,
    kGrantFieldNumber = 15,
    kRntiFieldNumber = 1,
    kMaxNofIterationsFieldNumber = 2,
    kLastOCqiFieldNumber = 3,
    kKSegmFieldNumber = 4,
    kCurrentTxNbFieldNumber = 5,
    kCsiEnableFieldNumber = 6,
    kEnable64QamFieldNumber = 7,
    kMeasTimeEnFieldNumber = 8,
    kMeasEpreEnFieldNumber = 10,
    kMeasTimeValueFieldNumber = 9,
    kMeasTaEnFieldNumber = 11,
    kMeasEvmEnFieldNumber = 12,
  };
  // repeated .fs.mac_rrc.srsran_softbuffer_tx_t tx = 16;
  int tx_size() const;
  private:
  int _internal_tx_size() const;
  public:
  void clear_tx();
  ::fs::mac_rrc::srsran_softbuffer_tx_t* mutable_tx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::mac_rrc::srsran_softbuffer_tx_t >*
      mutable_tx();
  private:
  const ::fs::mac_rrc::srsran_softbuffer_tx_t& _internal_tx(int index) const;
  ::fs::mac_rrc::srsran_softbuffer_tx_t* _internal_add_tx();
  public:
  const ::fs::mac_rrc::srsran_softbuffer_tx_t& tx(int index) const;
  ::fs::mac_rrc::srsran_softbuffer_tx_t* add_tx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::mac_rrc::srsran_softbuffer_tx_t >&
      tx() const;

  // repeated .fs.mac_rrc.srsran_softbuffer_rx_t rx = 17;
  int rx_size() const;
  private:
  int _internal_rx_size() const;
  public:
  void clear_rx();
  ::fs::mac_rrc::srsran_softbuffer_rx_t* mutable_rx(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::mac_rrc::srsran_softbuffer_rx_t >*
      mutable_rx();
  private:
  const ::fs::mac_rrc::srsran_softbuffer_rx_t& _internal_rx(int index) const;
  ::fs::mac_rrc::srsran_softbuffer_rx_t* _internal_add_rx();
  public:
  const ::fs::mac_rrc::srsran_softbuffer_rx_t& rx(int index) const;
  ::fs::mac_rrc::srsran_softbuffer_rx_t* add_rx();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::mac_rrc::srsran_softbuffer_rx_t >&
      rx() const;

  // .fs.mac_rrc.srsran_uci_cfg_t uci_cfg = 13;
  bool has_uci_cfg() const;
  private:
  bool _internal_has_uci_cfg() const;
  public:
  void clear_uci_cfg();
  const ::fs::mac_rrc::srsran_uci_cfg_t& uci_cfg() const;
  ::fs::mac_rrc::srsran_uci_cfg_t* release_uci_cfg();
  ::fs::mac_rrc::srsran_uci_cfg_t* mutable_uci_cfg();
  void set_allocated_uci_cfg(::fs::mac_rrc::srsran_uci_cfg_t* uci_cfg);
  private:
  const ::fs::mac_rrc::srsran_uci_cfg_t& _internal_uci_cfg() const;
  ::fs::mac_rrc::srsran_uci_cfg_t* _internal_mutable_uci_cfg();
  public:
  void unsafe_arena_set_allocated_uci_cfg(
      ::fs::mac_rrc::srsran_uci_cfg_t* uci_cfg);
  ::fs::mac_rrc::srsran_uci_cfg_t* unsafe_arena_release_uci_cfg();

  // .fs.mac_rrc.srsran_uci_offset_cfg_t uci_offset = 14;
  bool has_uci_offset() const;
  private:
  bool _internal_has_uci_offset() const;
  public:
  void clear_uci_offset();
  const ::fs::mac_rrc::srsran_uci_offset_cfg_t& uci_offset() const;
  ::fs::mac_rrc::srsran_uci_offset_cfg_t* release_uci_offset();
  ::fs::mac_rrc::srsran_uci_offset_cfg_t* mutable_uci_offset();
  void set_allocated_uci_offset(::fs::mac_rrc::srsran_uci_offset_cfg_t* uci_offset);
  private:
  const ::fs::mac_rrc::srsran_uci_offset_cfg_t& _internal_uci_offset() const;
  ::fs::mac_rrc::srsran_uci_offset_cfg_t* _internal_mutable_uci_offset();
  public:
  void unsafe_arena_set_allocated_uci_offset(
      ::fs::mac_rrc::srsran_uci_offset_cfg_t* uci_offset);
  ::fs::mac_rrc::srsran_uci_offset_cfg_t* unsafe_arena_release_uci_offset();

  // .fs.phy_rrc.srsran_pusch_grant_t grant = 15;
  bool has_grant() const;
  private:
  bool _internal_has_grant() const;
  public:
  void clear_grant();
  const ::fs::phy_rrc::srsran_pusch_grant_t& grant() const;
  ::fs::phy_rrc::srsran_pusch_grant_t* release_grant();
  ::fs::phy_rrc::srsran_pusch_grant_t* mutable_grant();
  void set_allocated_grant(::fs::phy_rrc::srsran_pusch_grant_t* grant);
  private:
  const ::fs::phy_rrc::srsran_pusch_grant_t& _internal_grant() const;
  ::fs::phy_rrc::srsran_pusch_grant_t* _internal_mutable_grant();
  public:
  void unsafe_arena_set_allocated_grant(
      ::fs::phy_rrc::srsran_pusch_grant_t* grant);
  ::fs::phy_rrc::srsran_pusch_grant_t* unsafe_arena_release_grant();

  // uint32 rnti = 1;
  void clear_rnti();
  ::PROTOBUF_NAMESPACE_ID::uint32 rnti() const;
  void set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rnti() const;
  void _internal_set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 max_nof_iterations = 2;
  void clear_max_nof_iterations();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_nof_iterations() const;
  void set_max_nof_iterations(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_nof_iterations() const;
  void _internal_set_max_nof_iterations(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_O_cqi = 3;
  void clear_last_o_cqi();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_o_cqi() const;
  void set_last_o_cqi(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_o_cqi() const;
  void _internal_set_last_o_cqi(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 K_segm = 4;
  void clear_k_segm();
  ::PROTOBUF_NAMESPACE_ID::uint32 k_segm() const;
  void set_k_segm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_k_segm() const;
  void _internal_set_k_segm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 current_tx_nb = 5;
  void clear_current_tx_nb();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_tx_nb() const;
  void set_current_tx_nb(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_tx_nb() const;
  void _internal_set_current_tx_nb(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool csi_enable = 6;
  void clear_csi_enable();
  bool csi_enable() const;
  void set_csi_enable(bool value);
  private:
  bool _internal_csi_enable() const;
  void _internal_set_csi_enable(bool value);
  public:

  // bool enable_64qam = 7;
  void clear_enable_64qam();
  bool enable_64qam() const;
  void set_enable_64qam(bool value);
  private:
  bool _internal_enable_64qam() const;
  void _internal_set_enable_64qam(bool value);
  public:

  // bool meas_time_en = 8;
  void clear_meas_time_en();
  bool meas_time_en() const;
  void set_meas_time_en(bool value);
  private:
  bool _internal_meas_time_en() const;
  void _internal_set_meas_time_en(bool value);
  public:

  // bool meas_epre_en = 10;
  void clear_meas_epre_en();
  bool meas_epre_en() const;
  void set_meas_epre_en(bool value);
  private:
  bool _internal_meas_epre_en() const;
  void _internal_set_meas_epre_en(bool value);
  public:

  // uint32 meas_time_value = 9;
  void clear_meas_time_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 meas_time_value() const;
  void set_meas_time_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_meas_time_value() const;
  void _internal_set_meas_time_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool meas_ta_en = 11;
  void clear_meas_ta_en();
  bool meas_ta_en() const;
  void set_meas_ta_en(bool value);
  private:
  bool _internal_meas_ta_en() const;
  void _internal_set_meas_ta_en(bool value);
  public:

  // bool meas_evm_en = 12;
  void clear_meas_evm_en();
  bool meas_evm_en() const;
  void set_meas_evm_en(bool value);
  private:
  bool _internal_meas_evm_en() const;
  void _internal_set_meas_evm_en(bool value);
  public:

  // @@protoc_insertion_point(class_scope:fs.phy_rrc.srsran_pusch_cfg_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::mac_rrc::srsran_softbuffer_tx_t > tx_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::mac_rrc::srsran_softbuffer_rx_t > rx_;
  ::fs::mac_rrc::srsran_uci_cfg_t* uci_cfg_;
  ::fs::mac_rrc::srsran_uci_offset_cfg_t* uci_offset_;
  ::fs::phy_rrc::srsran_pusch_grant_t* grant_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rnti_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_nof_iterations_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_o_cqi_;
  ::PROTOBUF_NAMESPACE_ID::uint32 k_segm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_tx_nb_;
  bool csi_enable_;
  bool enable_64qam_;
  bool meas_time_en_;
  bool meas_epre_en_;
  ::PROTOBUF_NAMESPACE_ID::uint32 meas_time_value_;
  bool meas_ta_en_;
  bool meas_evm_en_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phy_5frrc_5fcfg_5ft_2eproto;
};
// -------------------------------------------------------------------

class srsran_ul_cfg_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fs.phy_rrc.srsran_ul_cfg_t) */ {
 public:
  inline srsran_ul_cfg_t() : srsran_ul_cfg_t(nullptr) {};
  virtual ~srsran_ul_cfg_t();

  srsran_ul_cfg_t(const srsran_ul_cfg_t& from);
  srsran_ul_cfg_t(srsran_ul_cfg_t&& from) noexcept
    : srsran_ul_cfg_t() {
    *this = ::std::move(from);
  }

  inline srsran_ul_cfg_t& operator=(const srsran_ul_cfg_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline srsran_ul_cfg_t& operator=(srsran_ul_cfg_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const srsran_ul_cfg_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const srsran_ul_cfg_t* internal_default_instance() {
    return reinterpret_cast<const srsran_ul_cfg_t*>(
               &_srsran_ul_cfg_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(srsran_ul_cfg_t& a, srsran_ul_cfg_t& b) {
    a.Swap(&b);
  }
  inline void Swap(srsran_ul_cfg_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(srsran_ul_cfg_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline srsran_ul_cfg_t* New() const final {
    return CreateMaybeMessage<srsran_ul_cfg_t>(nullptr);
  }

  srsran_ul_cfg_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<srsran_ul_cfg_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const srsran_ul_cfg_t& from);
  void MergeFrom(const srsran_ul_cfg_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(srsran_ul_cfg_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fs.phy_rrc.srsran_ul_cfg_t";
  }
  protected:
  explicit srsran_ul_cfg_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto);
    return ::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPucchFieldNumber = 1,
    kHoppingFieldNumber = 2,
    kPuschFieldNumber = 3,
    kPowerCtrlFieldNumber = 4,
    kDmrsFieldNumber = 5,
    kSrsFieldNumber = 6,
  };
  // .fs.mac_rrc.srsran_pucch_cfg_t pucch = 1;
  bool has_pucch() const;
  private:
  bool _internal_has_pucch() const;
  public:
  void clear_pucch();
  const ::fs::mac_rrc::srsran_pucch_cfg_t& pucch() const;
  ::fs::mac_rrc::srsran_pucch_cfg_t* release_pucch();
  ::fs::mac_rrc::srsran_pucch_cfg_t* mutable_pucch();
  void set_allocated_pucch(::fs::mac_rrc::srsran_pucch_cfg_t* pucch);
  private:
  const ::fs::mac_rrc::srsran_pucch_cfg_t& _internal_pucch() const;
  ::fs::mac_rrc::srsran_pucch_cfg_t* _internal_mutable_pucch();
  public:
  void unsafe_arena_set_allocated_pucch(
      ::fs::mac_rrc::srsran_pucch_cfg_t* pucch);
  ::fs::mac_rrc::srsran_pucch_cfg_t* unsafe_arena_release_pucch();

  // .fs.mac_rrc.srsran_pusch_hopping_cfg_t hopping = 2;
  bool has_hopping() const;
  private:
  bool _internal_has_hopping() const;
  public:
  void clear_hopping();
  const ::fs::mac_rrc::srsran_pusch_hopping_cfg_t& hopping() const;
  ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* release_hopping();
  ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* mutable_hopping();
  void set_allocated_hopping(::fs::mac_rrc::srsran_pusch_hopping_cfg_t* hopping);
  private:
  const ::fs::mac_rrc::srsran_pusch_hopping_cfg_t& _internal_hopping() const;
  ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* _internal_mutable_hopping();
  public:
  void unsafe_arena_set_allocated_hopping(
      ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* hopping);
  ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* unsafe_arena_release_hopping();

  // .fs.phy_rrc.srsran_pusch_cfg_t pusch = 3;
  bool has_pusch() const;
  private:
  bool _internal_has_pusch() const;
  public:
  void clear_pusch();
  const ::fs::phy_rrc::srsran_pusch_cfg_t& pusch() const;
  ::fs::phy_rrc::srsran_pusch_cfg_t* release_pusch();
  ::fs::phy_rrc::srsran_pusch_cfg_t* mutable_pusch();
  void set_allocated_pusch(::fs::phy_rrc::srsran_pusch_cfg_t* pusch);
  private:
  const ::fs::phy_rrc::srsran_pusch_cfg_t& _internal_pusch() const;
  ::fs::phy_rrc::srsran_pusch_cfg_t* _internal_mutable_pusch();
  public:
  void unsafe_arena_set_allocated_pusch(
      ::fs::phy_rrc::srsran_pusch_cfg_t* pusch);
  ::fs::phy_rrc::srsran_pusch_cfg_t* unsafe_arena_release_pusch();

  // .fs.phy_rrc.srsran_ue_ul_powerctrl_t power_ctrl = 4;
  bool has_power_ctrl() const;
  private:
  bool _internal_has_power_ctrl() const;
  public:
  void clear_power_ctrl();
  const ::fs::phy_rrc::srsran_ue_ul_powerctrl_t& power_ctrl() const;
  ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* release_power_ctrl();
  ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* mutable_power_ctrl();
  void set_allocated_power_ctrl(::fs::phy_rrc::srsran_ue_ul_powerctrl_t* power_ctrl);
  private:
  const ::fs::phy_rrc::srsran_ue_ul_powerctrl_t& _internal_power_ctrl() const;
  ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* _internal_mutable_power_ctrl();
  public:
  void unsafe_arena_set_allocated_power_ctrl(
      ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* power_ctrl);
  ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* unsafe_arena_release_power_ctrl();

  // .fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t dmrs = 5;
  bool has_dmrs() const;
  private:
  bool _internal_has_dmrs() const;
  public:
  void clear_dmrs();
  const ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t& dmrs() const;
  ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* release_dmrs();
  ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* mutable_dmrs();
  void set_allocated_dmrs(::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* dmrs);
  private:
  const ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t& _internal_dmrs() const;
  ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* _internal_mutable_dmrs();
  public:
  void unsafe_arena_set_allocated_dmrs(
      ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* dmrs);
  ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* unsafe_arena_release_dmrs();

  // .fs.phy_rrc.srsran_refsignal_srs_cfg_t srs = 6;
  bool has_srs() const;
  private:
  bool _internal_has_srs() const;
  public:
  void clear_srs();
  const ::fs::phy_rrc::srsran_refsignal_srs_cfg_t& srs() const;
  ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* release_srs();
  ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* mutable_srs();
  void set_allocated_srs(::fs::phy_rrc::srsran_refsignal_srs_cfg_t* srs);
  private:
  const ::fs::phy_rrc::srsran_refsignal_srs_cfg_t& _internal_srs() const;
  ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* _internal_mutable_srs();
  public:
  void unsafe_arena_set_allocated_srs(
      ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* srs);
  ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* unsafe_arena_release_srs();

  // @@protoc_insertion_point(class_scope:fs.phy_rrc.srsran_ul_cfg_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::fs::mac_rrc::srsran_pucch_cfg_t* pucch_;
  ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* hopping_;
  ::fs::phy_rrc::srsran_pusch_cfg_t* pusch_;
  ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* power_ctrl_;
  ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* dmrs_;
  ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* srs_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phy_5frrc_5fcfg_5ft_2eproto;
};
// -------------------------------------------------------------------

class phy_cfg_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fs.phy_rrc.phy_cfg_t) */ {
 public:
  inline phy_cfg_t() : phy_cfg_t(nullptr) {};
  virtual ~phy_cfg_t();

  phy_cfg_t(const phy_cfg_t& from);
  phy_cfg_t(phy_cfg_t&& from) noexcept
    : phy_cfg_t() {
    *this = ::std::move(from);
  }

  inline phy_cfg_t& operator=(const phy_cfg_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline phy_cfg_t& operator=(phy_cfg_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const phy_cfg_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const phy_cfg_t* internal_default_instance() {
    return reinterpret_cast<const phy_cfg_t*>(
               &_phy_cfg_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(phy_cfg_t& a, phy_cfg_t& b) {
    a.Swap(&b);
  }
  inline void Swap(phy_cfg_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(phy_cfg_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline phy_cfg_t* New() const final {
    return CreateMaybeMessage<phy_cfg_t>(nullptr);
  }

  phy_cfg_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<phy_cfg_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const phy_cfg_t& from);
  void MergeFrom(const phy_cfg_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(phy_cfg_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fs.phy_rrc.phy_cfg_t";
  }
  protected:
  explicit phy_cfg_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto);
    return ::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDlCfgFieldNumber = 2,
    kUlCfgFieldNumber = 3,
    kPrachCfgFieldNumber = 4,
    kPrachCfgPresentFieldNumber = 1,
  };
  // .fs.mac_rrc.srsran_dl_cfg_t dl_cfg = 2;
  bool has_dl_cfg() const;
  private:
  bool _internal_has_dl_cfg() const;
  public:
  void clear_dl_cfg();
  const ::fs::mac_rrc::srsran_dl_cfg_t& dl_cfg() const;
  ::fs::mac_rrc::srsran_dl_cfg_t* release_dl_cfg();
  ::fs::mac_rrc::srsran_dl_cfg_t* mutable_dl_cfg();
  void set_allocated_dl_cfg(::fs::mac_rrc::srsran_dl_cfg_t* dl_cfg);
  private:
  const ::fs::mac_rrc::srsran_dl_cfg_t& _internal_dl_cfg() const;
  ::fs::mac_rrc::srsran_dl_cfg_t* _internal_mutable_dl_cfg();
  public:
  void unsafe_arena_set_allocated_dl_cfg(
      ::fs::mac_rrc::srsran_dl_cfg_t* dl_cfg);
  ::fs::mac_rrc::srsran_dl_cfg_t* unsafe_arena_release_dl_cfg();

  // .fs.phy_rrc.srsran_ul_cfg_t ul_cfg = 3;
  bool has_ul_cfg() const;
  private:
  bool _internal_has_ul_cfg() const;
  public:
  void clear_ul_cfg();
  const ::fs::phy_rrc::srsran_ul_cfg_t& ul_cfg() const;
  ::fs::phy_rrc::srsran_ul_cfg_t* release_ul_cfg();
  ::fs::phy_rrc::srsran_ul_cfg_t* mutable_ul_cfg();
  void set_allocated_ul_cfg(::fs::phy_rrc::srsran_ul_cfg_t* ul_cfg);
  private:
  const ::fs::phy_rrc::srsran_ul_cfg_t& _internal_ul_cfg() const;
  ::fs::phy_rrc::srsran_ul_cfg_t* _internal_mutable_ul_cfg();
  public:
  void unsafe_arena_set_allocated_ul_cfg(
      ::fs::phy_rrc::srsran_ul_cfg_t* ul_cfg);
  ::fs::phy_rrc::srsran_ul_cfg_t* unsafe_arena_release_ul_cfg();

  // .fs.phy_rrc.srsran_prach_cfg_t prach_cfg = 4;
  bool has_prach_cfg() const;
  private:
  bool _internal_has_prach_cfg() const;
  public:
  void clear_prach_cfg();
  const ::fs::phy_rrc::srsran_prach_cfg_t& prach_cfg() const;
  ::fs::phy_rrc::srsran_prach_cfg_t* release_prach_cfg();
  ::fs::phy_rrc::srsran_prach_cfg_t* mutable_prach_cfg();
  void set_allocated_prach_cfg(::fs::phy_rrc::srsran_prach_cfg_t* prach_cfg);
  private:
  const ::fs::phy_rrc::srsran_prach_cfg_t& _internal_prach_cfg() const;
  ::fs::phy_rrc::srsran_prach_cfg_t* _internal_mutable_prach_cfg();
  public:
  void unsafe_arena_set_allocated_prach_cfg(
      ::fs::phy_rrc::srsran_prach_cfg_t* prach_cfg);
  ::fs::phy_rrc::srsran_prach_cfg_t* unsafe_arena_release_prach_cfg();

  // bool prach_cfg_present = 1;
  void clear_prach_cfg_present();
  bool prach_cfg_present() const;
  void set_prach_cfg_present(bool value);
  private:
  bool _internal_prach_cfg_present() const;
  void _internal_set_prach_cfg_present(bool value);
  public:

  // @@protoc_insertion_point(class_scope:fs.phy_rrc.phy_cfg_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::fs::mac_rrc::srsran_dl_cfg_t* dl_cfg_;
  ::fs::phy_rrc::srsran_ul_cfg_t* ul_cfg_;
  ::fs::phy_rrc::srsran_prach_cfg_t* prach_cfg_;
  bool prach_cfg_present_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phy_5frrc_5fcfg_5ft_2eproto;
};
// -------------------------------------------------------------------

class phy_rrc_cfg_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fs.phy_rrc.phy_rrc_cfg_t) */ {
 public:
  inline phy_rrc_cfg_t() : phy_rrc_cfg_t(nullptr) {};
  virtual ~phy_rrc_cfg_t();

  phy_rrc_cfg_t(const phy_rrc_cfg_t& from);
  phy_rrc_cfg_t(phy_rrc_cfg_t&& from) noexcept
    : phy_rrc_cfg_t() {
    *this = ::std::move(from);
  }

  inline phy_rrc_cfg_t& operator=(const phy_rrc_cfg_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline phy_rrc_cfg_t& operator=(phy_rrc_cfg_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const phy_rrc_cfg_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const phy_rrc_cfg_t* internal_default_instance() {
    return reinterpret_cast<const phy_rrc_cfg_t*>(
               &_phy_rrc_cfg_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(phy_rrc_cfg_t& a, phy_rrc_cfg_t& b) {
    a.Swap(&b);
  }
  inline void Swap(phy_rrc_cfg_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(phy_rrc_cfg_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline phy_rrc_cfg_t* New() const final {
    return CreateMaybeMessage<phy_rrc_cfg_t>(nullptr);
  }

  phy_rrc_cfg_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<phy_rrc_cfg_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const phy_rrc_cfg_t& from);
  void MergeFrom(const phy_rrc_cfg_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(phy_rrc_cfg_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fs.phy_rrc.phy_rrc_cfg_t";
  }
  protected:
  explicit phy_rrc_cfg_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto);
    return ::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhyCfgFieldNumber = 3,
    kConfiguredFieldNumber = 1,
    kEnbCcIdxFieldNumber = 2,
  };
  // .fs.phy_rrc.phy_cfg_t phy_cfg = 3;
  bool has_phy_cfg() const;
  private:
  bool _internal_has_phy_cfg() const;
  public:
  void clear_phy_cfg();
  const ::fs::phy_rrc::phy_cfg_t& phy_cfg() const;
  ::fs::phy_rrc::phy_cfg_t* release_phy_cfg();
  ::fs::phy_rrc::phy_cfg_t* mutable_phy_cfg();
  void set_allocated_phy_cfg(::fs::phy_rrc::phy_cfg_t* phy_cfg);
  private:
  const ::fs::phy_rrc::phy_cfg_t& _internal_phy_cfg() const;
  ::fs::phy_rrc::phy_cfg_t* _internal_mutable_phy_cfg();
  public:
  void unsafe_arena_set_allocated_phy_cfg(
      ::fs::phy_rrc::phy_cfg_t* phy_cfg);
  ::fs::phy_rrc::phy_cfg_t* unsafe_arena_release_phy_cfg();

  // bool configured = 1;
  void clear_configured();
  bool configured() const;
  void set_configured(bool value);
  private:
  bool _internal_configured() const;
  void _internal_set_configured(bool value);
  public:

  // uint32 enb_cc_idx = 2;
  void clear_enb_cc_idx();
  ::PROTOBUF_NAMESPACE_ID::uint32 enb_cc_idx() const;
  void set_enb_cc_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_enb_cc_idx() const;
  void _internal_set_enb_cc_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:fs.phy_rrc.phy_rrc_cfg_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::fs::phy_rrc::phy_cfg_t* phy_cfg_;
  bool configured_;
  ::PROTOBUF_NAMESPACE_ID::uint32 enb_cc_idx_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phy_5frrc_5fcfg_5ft_2eproto;
};
// -------------------------------------------------------------------

class phy_rrc_cfg_list_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fs.phy_rrc.phy_rrc_cfg_list_t) */ {
 public:
  inline phy_rrc_cfg_list_t() : phy_rrc_cfg_list_t(nullptr) {};
  virtual ~phy_rrc_cfg_list_t();

  phy_rrc_cfg_list_t(const phy_rrc_cfg_list_t& from);
  phy_rrc_cfg_list_t(phy_rrc_cfg_list_t&& from) noexcept
    : phy_rrc_cfg_list_t() {
    *this = ::std::move(from);
  }

  inline phy_rrc_cfg_list_t& operator=(const phy_rrc_cfg_list_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline phy_rrc_cfg_list_t& operator=(phy_rrc_cfg_list_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const phy_rrc_cfg_list_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const phy_rrc_cfg_list_t* internal_default_instance() {
    return reinterpret_cast<const phy_rrc_cfg_list_t*>(
               &_phy_rrc_cfg_list_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(phy_rrc_cfg_list_t& a, phy_rrc_cfg_list_t& b) {
    a.Swap(&b);
  }
  inline void Swap(phy_rrc_cfg_list_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(phy_rrc_cfg_list_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline phy_rrc_cfg_list_t* New() const final {
    return CreateMaybeMessage<phy_rrc_cfg_list_t>(nullptr);
  }

  phy_rrc_cfg_list_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<phy_rrc_cfg_list_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const phy_rrc_cfg_list_t& from);
  void MergeFrom(const phy_rrc_cfg_list_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(phy_rrc_cfg_list_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fs.phy_rrc.phy_rrc_cfg_list_t";
  }
  protected:
  explicit phy_rrc_cfg_list_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto);
    return ::descriptor_table_phy_5frrc_5fcfg_5ft_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListFieldNumber = 1,
  };
  // repeated .fs.phy_rrc.phy_rrc_cfg_t list = 1;
  int list_size() const;
  private:
  int _internal_list_size() const;
  public:
  void clear_list();
  ::fs::phy_rrc::phy_rrc_cfg_t* mutable_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::phy_rrc::phy_rrc_cfg_t >*
      mutable_list();
  private:
  const ::fs::phy_rrc::phy_rrc_cfg_t& _internal_list(int index) const;
  ::fs::phy_rrc::phy_rrc_cfg_t* _internal_add_list();
  public:
  const ::fs::phy_rrc::phy_rrc_cfg_t& list(int index) const;
  ::fs::phy_rrc::phy_rrc_cfg_t* add_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::phy_rrc::phy_rrc_cfg_t >&
      list() const;

  // @@protoc_insertion_point(class_scope:fs.phy_rrc.phy_rrc_cfg_list_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::phy_rrc::phy_rrc_cfg_t > list_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_phy_5frrc_5fcfg_5ft_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// srsran_tdd_config_t

// bool configured = 1;
inline void srsran_tdd_config_t::clear_configured() {
  configured_ = false;
}
inline bool srsran_tdd_config_t::_internal_configured() const {
  return configured_;
}
inline bool srsran_tdd_config_t::configured() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_tdd_config_t.configured)
  return _internal_configured();
}
inline void srsran_tdd_config_t::_internal_set_configured(bool value) {
  
  configured_ = value;
}
inline void srsran_tdd_config_t::set_configured(bool value) {
  _internal_set_configured(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_tdd_config_t.configured)
}

// uint32 sf_config = 2;
inline void srsran_tdd_config_t::clear_sf_config() {
  sf_config_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_tdd_config_t::_internal_sf_config() const {
  return sf_config_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_tdd_config_t::sf_config() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_tdd_config_t.sf_config)
  return _internal_sf_config();
}
inline void srsran_tdd_config_t::_internal_set_sf_config(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sf_config_ = value;
}
inline void srsran_tdd_config_t::set_sf_config(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sf_config(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_tdd_config_t.sf_config)
}

// uint32 ss_config = 3;
inline void srsran_tdd_config_t::clear_ss_config() {
  ss_config_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_tdd_config_t::_internal_ss_config() const {
  return ss_config_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_tdd_config_t::ss_config() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_tdd_config_t.ss_config)
  return _internal_ss_config();
}
inline void srsran_tdd_config_t::_internal_set_ss_config(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ss_config_ = value;
}
inline void srsran_tdd_config_t::set_ss_config(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ss_config(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_tdd_config_t.ss_config)
}

// -------------------------------------------------------------------

// srsran_prach_cfg_t

// bool is_nr = 1;
inline void srsran_prach_cfg_t::clear_is_nr() {
  is_nr_ = false;
}
inline bool srsran_prach_cfg_t::_internal_is_nr() const {
  return is_nr_;
}
inline bool srsran_prach_cfg_t::is_nr() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_prach_cfg_t.is_nr)
  return _internal_is_nr();
}
inline void srsran_prach_cfg_t::_internal_set_is_nr(bool value) {
  
  is_nr_ = value;
}
inline void srsran_prach_cfg_t::set_is_nr(bool value) {
  _internal_set_is_nr(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_prach_cfg_t.is_nr)
}

// bool hs_flag = 2;
inline void srsran_prach_cfg_t::clear_hs_flag() {
  hs_flag_ = false;
}
inline bool srsran_prach_cfg_t::_internal_hs_flag() const {
  return hs_flag_;
}
inline bool srsran_prach_cfg_t::hs_flag() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_prach_cfg_t.hs_flag)
  return _internal_hs_flag();
}
inline void srsran_prach_cfg_t::_internal_set_hs_flag(bool value) {
  
  hs_flag_ = value;
}
inline void srsran_prach_cfg_t::set_hs_flag(bool value) {
  _internal_set_hs_flag(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_prach_cfg_t.hs_flag)
}

// bool enable_successive_cancellation = 3;
inline void srsran_prach_cfg_t::clear_enable_successive_cancellation() {
  enable_successive_cancellation_ = false;
}
inline bool srsran_prach_cfg_t::_internal_enable_successive_cancellation() const {
  return enable_successive_cancellation_;
}
inline bool srsran_prach_cfg_t::enable_successive_cancellation() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_prach_cfg_t.enable_successive_cancellation)
  return _internal_enable_successive_cancellation();
}
inline void srsran_prach_cfg_t::_internal_set_enable_successive_cancellation(bool value) {
  
  enable_successive_cancellation_ = value;
}
inline void srsran_prach_cfg_t::set_enable_successive_cancellation(bool value) {
  _internal_set_enable_successive_cancellation(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_prach_cfg_t.enable_successive_cancellation)
}

// bool enable_freq_domain_offset_calc = 4;
inline void srsran_prach_cfg_t::clear_enable_freq_domain_offset_calc() {
  enable_freq_domain_offset_calc_ = false;
}
inline bool srsran_prach_cfg_t::_internal_enable_freq_domain_offset_calc() const {
  return enable_freq_domain_offset_calc_;
}
inline bool srsran_prach_cfg_t::enable_freq_domain_offset_calc() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_prach_cfg_t.enable_freq_domain_offset_calc)
  return _internal_enable_freq_domain_offset_calc();
}
inline void srsran_prach_cfg_t::_internal_set_enable_freq_domain_offset_calc(bool value) {
  
  enable_freq_domain_offset_calc_ = value;
}
inline void srsran_prach_cfg_t::set_enable_freq_domain_offset_calc(bool value) {
  _internal_set_enable_freq_domain_offset_calc(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_prach_cfg_t.enable_freq_domain_offset_calc)
}

// uint32 config_idx = 5;
inline void srsran_prach_cfg_t::clear_config_idx() {
  config_idx_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_prach_cfg_t::_internal_config_idx() const {
  return config_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_prach_cfg_t::config_idx() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_prach_cfg_t.config_idx)
  return _internal_config_idx();
}
inline void srsran_prach_cfg_t::_internal_set_config_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  config_idx_ = value;
}
inline void srsran_prach_cfg_t::set_config_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_config_idx(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_prach_cfg_t.config_idx)
}

// uint32 root_seq_idx = 6;
inline void srsran_prach_cfg_t::clear_root_seq_idx() {
  root_seq_idx_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_prach_cfg_t::_internal_root_seq_idx() const {
  return root_seq_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_prach_cfg_t::root_seq_idx() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_prach_cfg_t.root_seq_idx)
  return _internal_root_seq_idx();
}
inline void srsran_prach_cfg_t::_internal_set_root_seq_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  root_seq_idx_ = value;
}
inline void srsran_prach_cfg_t::set_root_seq_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_root_seq_idx(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_prach_cfg_t.root_seq_idx)
}

// uint32 zero_corr_zone = 7;
inline void srsran_prach_cfg_t::clear_zero_corr_zone() {
  zero_corr_zone_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_prach_cfg_t::_internal_zero_corr_zone() const {
  return zero_corr_zone_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_prach_cfg_t::zero_corr_zone() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_prach_cfg_t.zero_corr_zone)
  return _internal_zero_corr_zone();
}
inline void srsran_prach_cfg_t::_internal_set_zero_corr_zone(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  zero_corr_zone_ = value;
}
inline void srsran_prach_cfg_t::set_zero_corr_zone(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_zero_corr_zone(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_prach_cfg_t.zero_corr_zone)
}

// uint32 freq_offset = 8;
inline void srsran_prach_cfg_t::clear_freq_offset() {
  freq_offset_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_prach_cfg_t::_internal_freq_offset() const {
  return freq_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_prach_cfg_t::freq_offset() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_prach_cfg_t.freq_offset)
  return _internal_freq_offset();
}
inline void srsran_prach_cfg_t::_internal_set_freq_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  freq_offset_ = value;
}
inline void srsran_prach_cfg_t::set_freq_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_freq_offset(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_prach_cfg_t.freq_offset)
}

// uint32 num_ra_preambles = 9;
inline void srsran_prach_cfg_t::clear_num_ra_preambles() {
  num_ra_preambles_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_prach_cfg_t::_internal_num_ra_preambles() const {
  return num_ra_preambles_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_prach_cfg_t::num_ra_preambles() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_prach_cfg_t.num_ra_preambles)
  return _internal_num_ra_preambles();
}
inline void srsran_prach_cfg_t::_internal_set_num_ra_preambles(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  num_ra_preambles_ = value;
}
inline void srsran_prach_cfg_t::set_num_ra_preambles(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_ra_preambles(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_prach_cfg_t.num_ra_preambles)
}

// .fs.phy_rrc.srsran_tdd_config_t tdd_config = 10;
inline bool srsran_prach_cfg_t::_internal_has_tdd_config() const {
  return this != internal_default_instance() && tdd_config_ != nullptr;
}
inline bool srsran_prach_cfg_t::has_tdd_config() const {
  return _internal_has_tdd_config();
}
inline void srsran_prach_cfg_t::clear_tdd_config() {
  if (GetArena() == nullptr && tdd_config_ != nullptr) {
    delete tdd_config_;
  }
  tdd_config_ = nullptr;
}
inline const ::fs::phy_rrc::srsran_tdd_config_t& srsran_prach_cfg_t::_internal_tdd_config() const {
  const ::fs::phy_rrc::srsran_tdd_config_t* p = tdd_config_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::phy_rrc::srsran_tdd_config_t*>(
      &::fs::phy_rrc::_srsran_tdd_config_t_default_instance_);
}
inline const ::fs::phy_rrc::srsran_tdd_config_t& srsran_prach_cfg_t::tdd_config() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_prach_cfg_t.tdd_config)
  return _internal_tdd_config();
}
inline void srsran_prach_cfg_t::unsafe_arena_set_allocated_tdd_config(
    ::fs::phy_rrc::srsran_tdd_config_t* tdd_config) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tdd_config_);
  }
  tdd_config_ = tdd_config;
  if (tdd_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.srsran_prach_cfg_t.tdd_config)
}
inline ::fs::phy_rrc::srsran_tdd_config_t* srsran_prach_cfg_t::release_tdd_config() {
  auto temp = unsafe_arena_release_tdd_config();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::phy_rrc::srsran_tdd_config_t* srsran_prach_cfg_t::unsafe_arena_release_tdd_config() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.srsran_prach_cfg_t.tdd_config)
  
  ::fs::phy_rrc::srsran_tdd_config_t* temp = tdd_config_;
  tdd_config_ = nullptr;
  return temp;
}
inline ::fs::phy_rrc::srsran_tdd_config_t* srsran_prach_cfg_t::_internal_mutable_tdd_config() {
  
  if (tdd_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::phy_rrc::srsran_tdd_config_t>(GetArena());
    tdd_config_ = p;
  }
  return tdd_config_;
}
inline ::fs::phy_rrc::srsran_tdd_config_t* srsran_prach_cfg_t::mutable_tdd_config() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_prach_cfg_t.tdd_config)
  return _internal_mutable_tdd_config();
}
inline void srsran_prach_cfg_t::set_allocated_tdd_config(::fs::phy_rrc::srsran_tdd_config_t* tdd_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete tdd_config_;
  }
  if (tdd_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(tdd_config);
    if (message_arena != submessage_arena) {
      tdd_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tdd_config, submessage_arena);
    }
    
  } else {
    
  }
  tdd_config_ = tdd_config;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.srsran_prach_cfg_t.tdd_config)
}

// -------------------------------------------------------------------

// srsran_refsignal_srs_cfg_t

// bool simul_ack = 1;
inline void srsran_refsignal_srs_cfg_t::clear_simul_ack() {
  simul_ack_ = false;
}
inline bool srsran_refsignal_srs_cfg_t::_internal_simul_ack() const {
  return simul_ack_;
}
inline bool srsran_refsignal_srs_cfg_t::simul_ack() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_srs_cfg_t.simul_ack)
  return _internal_simul_ack();
}
inline void srsran_refsignal_srs_cfg_t::_internal_set_simul_ack(bool value) {
  
  simul_ack_ = value;
}
inline void srsran_refsignal_srs_cfg_t::set_simul_ack(bool value) {
  _internal_set_simul_ack(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_srs_cfg_t.simul_ack)
}

// bool dedicated_enabled = 2;
inline void srsran_refsignal_srs_cfg_t::clear_dedicated_enabled() {
  dedicated_enabled_ = false;
}
inline bool srsran_refsignal_srs_cfg_t::_internal_dedicated_enabled() const {
  return dedicated_enabled_;
}
inline bool srsran_refsignal_srs_cfg_t::dedicated_enabled() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_srs_cfg_t.dedicated_enabled)
  return _internal_dedicated_enabled();
}
inline void srsran_refsignal_srs_cfg_t::_internal_set_dedicated_enabled(bool value) {
  
  dedicated_enabled_ = value;
}
inline void srsran_refsignal_srs_cfg_t::set_dedicated_enabled(bool value) {
  _internal_set_dedicated_enabled(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_srs_cfg_t.dedicated_enabled)
}

// bool common_enabled = 3;
inline void srsran_refsignal_srs_cfg_t::clear_common_enabled() {
  common_enabled_ = false;
}
inline bool srsran_refsignal_srs_cfg_t::_internal_common_enabled() const {
  return common_enabled_;
}
inline bool srsran_refsignal_srs_cfg_t::common_enabled() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_srs_cfg_t.common_enabled)
  return _internal_common_enabled();
}
inline void srsran_refsignal_srs_cfg_t::_internal_set_common_enabled(bool value) {
  
  common_enabled_ = value;
}
inline void srsran_refsignal_srs_cfg_t::set_common_enabled(bool value) {
  _internal_set_common_enabled(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_srs_cfg_t.common_enabled)
}

// bool configured = 4;
inline void srsran_refsignal_srs_cfg_t::clear_configured() {
  configured_ = false;
}
inline bool srsran_refsignal_srs_cfg_t::_internal_configured() const {
  return configured_;
}
inline bool srsran_refsignal_srs_cfg_t::configured() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_srs_cfg_t.configured)
  return _internal_configured();
}
inline void srsran_refsignal_srs_cfg_t::_internal_set_configured(bool value) {
  
  configured_ = value;
}
inline void srsran_refsignal_srs_cfg_t::set_configured(bool value) {
  _internal_set_configured(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_srs_cfg_t.configured)
}

// uint32 subframe_config = 5;
inline void srsran_refsignal_srs_cfg_t::clear_subframe_config() {
  subframe_config_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::_internal_subframe_config() const {
  return subframe_config_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::subframe_config() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_srs_cfg_t.subframe_config)
  return _internal_subframe_config();
}
inline void srsran_refsignal_srs_cfg_t::_internal_set_subframe_config(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subframe_config_ = value;
}
inline void srsran_refsignal_srs_cfg_t::set_subframe_config(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subframe_config(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_srs_cfg_t.subframe_config)
}

// uint32 bw_cfg = 6;
inline void srsran_refsignal_srs_cfg_t::clear_bw_cfg() {
  bw_cfg_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::_internal_bw_cfg() const {
  return bw_cfg_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::bw_cfg() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_srs_cfg_t.bw_cfg)
  return _internal_bw_cfg();
}
inline void srsran_refsignal_srs_cfg_t::_internal_set_bw_cfg(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bw_cfg_ = value;
}
inline void srsran_refsignal_srs_cfg_t::set_bw_cfg(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bw_cfg(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_srs_cfg_t.bw_cfg)
}

// uint32 B = 7;
inline void srsran_refsignal_srs_cfg_t::clear_b() {
  b_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::_internal_b() const {
  return b_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::b() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_srs_cfg_t.B)
  return _internal_b();
}
inline void srsran_refsignal_srs_cfg_t::_internal_set_b(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  b_ = value;
}
inline void srsran_refsignal_srs_cfg_t::set_b(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_srs_cfg_t.B)
}

// uint32 b_hop = 8;
inline void srsran_refsignal_srs_cfg_t::clear_b_hop() {
  b_hop_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::_internal_b_hop() const {
  return b_hop_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::b_hop() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_srs_cfg_t.b_hop)
  return _internal_b_hop();
}
inline void srsran_refsignal_srs_cfg_t::_internal_set_b_hop(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  b_hop_ = value;
}
inline void srsran_refsignal_srs_cfg_t::set_b_hop(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_b_hop(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_srs_cfg_t.b_hop)
}

// uint32 n_srs = 9;
inline void srsran_refsignal_srs_cfg_t::clear_n_srs() {
  n_srs_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::_internal_n_srs() const {
  return n_srs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::n_srs() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_srs_cfg_t.n_srs)
  return _internal_n_srs();
}
inline void srsran_refsignal_srs_cfg_t::_internal_set_n_srs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  n_srs_ = value;
}
inline void srsran_refsignal_srs_cfg_t::set_n_srs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_n_srs(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_srs_cfg_t.n_srs)
}

// uint32 I_srs = 10;
inline void srsran_refsignal_srs_cfg_t::clear_i_srs() {
  i_srs_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::_internal_i_srs() const {
  return i_srs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::i_srs() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_srs_cfg_t.I_srs)
  return _internal_i_srs();
}
inline void srsran_refsignal_srs_cfg_t::_internal_set_i_srs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  i_srs_ = value;
}
inline void srsran_refsignal_srs_cfg_t::set_i_srs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_i_srs(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_srs_cfg_t.I_srs)
}

// uint32 k_tc = 11;
inline void srsran_refsignal_srs_cfg_t::clear_k_tc() {
  k_tc_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::_internal_k_tc() const {
  return k_tc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::k_tc() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_srs_cfg_t.k_tc)
  return _internal_k_tc();
}
inline void srsran_refsignal_srs_cfg_t::_internal_set_k_tc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  k_tc_ = value;
}
inline void srsran_refsignal_srs_cfg_t::set_k_tc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_k_tc(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_srs_cfg_t.k_tc)
}

// uint32 n_rrc = 12;
inline void srsran_refsignal_srs_cfg_t::clear_n_rrc() {
  n_rrc_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::_internal_n_rrc() const {
  return n_rrc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_srs_cfg_t::n_rrc() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_srs_cfg_t.n_rrc)
  return _internal_n_rrc();
}
inline void srsran_refsignal_srs_cfg_t::_internal_set_n_rrc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  n_rrc_ = value;
}
inline void srsran_refsignal_srs_cfg_t::set_n_rrc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_n_rrc(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_srs_cfg_t.n_rrc)
}

// -------------------------------------------------------------------

// srsran_refsignal_dmrs_pusch_cfg_t

// bool group_hopping_en = 1;
inline void srsran_refsignal_dmrs_pusch_cfg_t::clear_group_hopping_en() {
  group_hopping_en_ = false;
}
inline bool srsran_refsignal_dmrs_pusch_cfg_t::_internal_group_hopping_en() const {
  return group_hopping_en_;
}
inline bool srsran_refsignal_dmrs_pusch_cfg_t::group_hopping_en() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t.group_hopping_en)
  return _internal_group_hopping_en();
}
inline void srsran_refsignal_dmrs_pusch_cfg_t::_internal_set_group_hopping_en(bool value) {
  
  group_hopping_en_ = value;
}
inline void srsran_refsignal_dmrs_pusch_cfg_t::set_group_hopping_en(bool value) {
  _internal_set_group_hopping_en(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t.group_hopping_en)
}

// bool sequence_hopping_en = 2;
inline void srsran_refsignal_dmrs_pusch_cfg_t::clear_sequence_hopping_en() {
  sequence_hopping_en_ = false;
}
inline bool srsran_refsignal_dmrs_pusch_cfg_t::_internal_sequence_hopping_en() const {
  return sequence_hopping_en_;
}
inline bool srsran_refsignal_dmrs_pusch_cfg_t::sequence_hopping_en() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t.sequence_hopping_en)
  return _internal_sequence_hopping_en();
}
inline void srsran_refsignal_dmrs_pusch_cfg_t::_internal_set_sequence_hopping_en(bool value) {
  
  sequence_hopping_en_ = value;
}
inline void srsran_refsignal_dmrs_pusch_cfg_t::set_sequence_hopping_en(bool value) {
  _internal_set_sequence_hopping_en(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t.sequence_hopping_en)
}

// uint32 cyclic_shift = 3;
inline void srsran_refsignal_dmrs_pusch_cfg_t::clear_cyclic_shift() {
  cyclic_shift_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_dmrs_pusch_cfg_t::_internal_cyclic_shift() const {
  return cyclic_shift_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_dmrs_pusch_cfg_t::cyclic_shift() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t.cyclic_shift)
  return _internal_cyclic_shift();
}
inline void srsran_refsignal_dmrs_pusch_cfg_t::_internal_set_cyclic_shift(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cyclic_shift_ = value;
}
inline void srsran_refsignal_dmrs_pusch_cfg_t::set_cyclic_shift(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cyclic_shift(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t.cyclic_shift)
}

// uint32 delta_ss = 4;
inline void srsran_refsignal_dmrs_pusch_cfg_t::clear_delta_ss() {
  delta_ss_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_dmrs_pusch_cfg_t::_internal_delta_ss() const {
  return delta_ss_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_refsignal_dmrs_pusch_cfg_t::delta_ss() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t.delta_ss)
  return _internal_delta_ss();
}
inline void srsran_refsignal_dmrs_pusch_cfg_t::_internal_set_delta_ss(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  delta_ss_ = value;
}
inline void srsran_refsignal_dmrs_pusch_cfg_t::set_delta_ss(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_delta_ss(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t.delta_ss)
}

// -------------------------------------------------------------------

// srsran_ue_ul_powerctrl_t

// bool delta_mcs_based = 1;
inline void srsran_ue_ul_powerctrl_t::clear_delta_mcs_based() {
  delta_mcs_based_ = false;
}
inline bool srsran_ue_ul_powerctrl_t::_internal_delta_mcs_based() const {
  return delta_mcs_based_;
}
inline bool srsran_ue_ul_powerctrl_t::delta_mcs_based() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ue_ul_powerctrl_t.delta_mcs_based)
  return _internal_delta_mcs_based();
}
inline void srsran_ue_ul_powerctrl_t::_internal_set_delta_mcs_based(bool value) {
  
  delta_mcs_based_ = value;
}
inline void srsran_ue_ul_powerctrl_t::set_delta_mcs_based(bool value) {
  _internal_set_delta_mcs_based(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_ue_ul_powerctrl_t.delta_mcs_based)
}

// bool acc_enabled = 2;
inline void srsran_ue_ul_powerctrl_t::clear_acc_enabled() {
  acc_enabled_ = false;
}
inline bool srsran_ue_ul_powerctrl_t::_internal_acc_enabled() const {
  return acc_enabled_;
}
inline bool srsran_ue_ul_powerctrl_t::acc_enabled() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ue_ul_powerctrl_t.acc_enabled)
  return _internal_acc_enabled();
}
inline void srsran_ue_ul_powerctrl_t::_internal_set_acc_enabled(bool value) {
  
  acc_enabled_ = value;
}
inline void srsran_ue_ul_powerctrl_t::set_acc_enabled(bool value) {
  _internal_set_acc_enabled(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_ue_ul_powerctrl_t.acc_enabled)
}

// float p0_nominal_pusch = 3;
inline void srsran_ue_ul_powerctrl_t::clear_p0_nominal_pusch() {
  p0_nominal_pusch_ = 0;
}
inline float srsran_ue_ul_powerctrl_t::_internal_p0_nominal_pusch() const {
  return p0_nominal_pusch_;
}
inline float srsran_ue_ul_powerctrl_t::p0_nominal_pusch() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ue_ul_powerctrl_t.p0_nominal_pusch)
  return _internal_p0_nominal_pusch();
}
inline void srsran_ue_ul_powerctrl_t::_internal_set_p0_nominal_pusch(float value) {
  
  p0_nominal_pusch_ = value;
}
inline void srsran_ue_ul_powerctrl_t::set_p0_nominal_pusch(float value) {
  _internal_set_p0_nominal_pusch(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_ue_ul_powerctrl_t.p0_nominal_pusch)
}

// float alpha = 4;
inline void srsran_ue_ul_powerctrl_t::clear_alpha() {
  alpha_ = 0;
}
inline float srsran_ue_ul_powerctrl_t::_internal_alpha() const {
  return alpha_;
}
inline float srsran_ue_ul_powerctrl_t::alpha() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ue_ul_powerctrl_t.alpha)
  return _internal_alpha();
}
inline void srsran_ue_ul_powerctrl_t::_internal_set_alpha(float value) {
  
  alpha_ = value;
}
inline void srsran_ue_ul_powerctrl_t::set_alpha(float value) {
  _internal_set_alpha(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_ue_ul_powerctrl_t.alpha)
}

// float p0_nominal_pucch = 5;
inline void srsran_ue_ul_powerctrl_t::clear_p0_nominal_pucch() {
  p0_nominal_pucch_ = 0;
}
inline float srsran_ue_ul_powerctrl_t::_internal_p0_nominal_pucch() const {
  return p0_nominal_pucch_;
}
inline float srsran_ue_ul_powerctrl_t::p0_nominal_pucch() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ue_ul_powerctrl_t.p0_nominal_pucch)
  return _internal_p0_nominal_pucch();
}
inline void srsran_ue_ul_powerctrl_t::_internal_set_p0_nominal_pucch(float value) {
  
  p0_nominal_pucch_ = value;
}
inline void srsran_ue_ul_powerctrl_t::set_p0_nominal_pucch(float value) {
  _internal_set_p0_nominal_pucch(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_ue_ul_powerctrl_t.p0_nominal_pucch)
}

// float delta_preamble_msg3 = 6;
inline void srsran_ue_ul_powerctrl_t::clear_delta_preamble_msg3() {
  delta_preamble_msg3_ = 0;
}
inline float srsran_ue_ul_powerctrl_t::_internal_delta_preamble_msg3() const {
  return delta_preamble_msg3_;
}
inline float srsran_ue_ul_powerctrl_t::delta_preamble_msg3() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ue_ul_powerctrl_t.delta_preamble_msg3)
  return _internal_delta_preamble_msg3();
}
inline void srsran_ue_ul_powerctrl_t::_internal_set_delta_preamble_msg3(float value) {
  
  delta_preamble_msg3_ = value;
}
inline void srsran_ue_ul_powerctrl_t::set_delta_preamble_msg3(float value) {
  _internal_set_delta_preamble_msg3(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_ue_ul_powerctrl_t.delta_preamble_msg3)
}

// float p0_ue_pusch = 7;
inline void srsran_ue_ul_powerctrl_t::clear_p0_ue_pusch() {
  p0_ue_pusch_ = 0;
}
inline float srsran_ue_ul_powerctrl_t::_internal_p0_ue_pusch() const {
  return p0_ue_pusch_;
}
inline float srsran_ue_ul_powerctrl_t::p0_ue_pusch() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ue_ul_powerctrl_t.p0_ue_pusch)
  return _internal_p0_ue_pusch();
}
inline void srsran_ue_ul_powerctrl_t::_internal_set_p0_ue_pusch(float value) {
  
  p0_ue_pusch_ = value;
}
inline void srsran_ue_ul_powerctrl_t::set_p0_ue_pusch(float value) {
  _internal_set_p0_ue_pusch(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_ue_ul_powerctrl_t.p0_ue_pusch)
}

// float p0_ue_pucch = 8;
inline void srsran_ue_ul_powerctrl_t::clear_p0_ue_pucch() {
  p0_ue_pucch_ = 0;
}
inline float srsran_ue_ul_powerctrl_t::_internal_p0_ue_pucch() const {
  return p0_ue_pucch_;
}
inline float srsran_ue_ul_powerctrl_t::p0_ue_pucch() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ue_ul_powerctrl_t.p0_ue_pucch)
  return _internal_p0_ue_pucch();
}
inline void srsran_ue_ul_powerctrl_t::_internal_set_p0_ue_pucch(float value) {
  
  p0_ue_pucch_ = value;
}
inline void srsran_ue_ul_powerctrl_t::set_p0_ue_pucch(float value) {
  _internal_set_p0_ue_pucch(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_ue_ul_powerctrl_t.p0_ue_pucch)
}

// float p_srs_offset = 9;
inline void srsran_ue_ul_powerctrl_t::clear_p_srs_offset() {
  p_srs_offset_ = 0;
}
inline float srsran_ue_ul_powerctrl_t::_internal_p_srs_offset() const {
  return p_srs_offset_;
}
inline float srsran_ue_ul_powerctrl_t::p_srs_offset() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ue_ul_powerctrl_t.p_srs_offset)
  return _internal_p_srs_offset();
}
inline void srsran_ue_ul_powerctrl_t::_internal_set_p_srs_offset(float value) {
  
  p_srs_offset_ = value;
}
inline void srsran_ue_ul_powerctrl_t::set_p_srs_offset(float value) {
  _internal_set_p_srs_offset(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_ue_ul_powerctrl_t.p_srs_offset)
}

// repeated float delta_f_pucch = 10;
inline int srsran_ue_ul_powerctrl_t::_internal_delta_f_pucch_size() const {
  return delta_f_pucch_.size();
}
inline int srsran_ue_ul_powerctrl_t::delta_f_pucch_size() const {
  return _internal_delta_f_pucch_size();
}
inline void srsran_ue_ul_powerctrl_t::clear_delta_f_pucch() {
  delta_f_pucch_.Clear();
}
inline float srsran_ue_ul_powerctrl_t::_internal_delta_f_pucch(int index) const {
  return delta_f_pucch_.Get(index);
}
inline float srsran_ue_ul_powerctrl_t::delta_f_pucch(int index) const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ue_ul_powerctrl_t.delta_f_pucch)
  return _internal_delta_f_pucch(index);
}
inline void srsran_ue_ul_powerctrl_t::set_delta_f_pucch(int index, float value) {
  delta_f_pucch_.Set(index, value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_ue_ul_powerctrl_t.delta_f_pucch)
}
inline void srsran_ue_ul_powerctrl_t::_internal_add_delta_f_pucch(float value) {
  delta_f_pucch_.Add(value);
}
inline void srsran_ue_ul_powerctrl_t::add_delta_f_pucch(float value) {
  _internal_add_delta_f_pucch(value);
  // @@protoc_insertion_point(field_add:fs.phy_rrc.srsran_ue_ul_powerctrl_t.delta_f_pucch)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
srsran_ue_ul_powerctrl_t::_internal_delta_f_pucch() const {
  return delta_f_pucch_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
srsran_ue_ul_powerctrl_t::delta_f_pucch() const {
  // @@protoc_insertion_point(field_list:fs.phy_rrc.srsran_ue_ul_powerctrl_t.delta_f_pucch)
  return _internal_delta_f_pucch();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
srsran_ue_ul_powerctrl_t::_internal_mutable_delta_f_pucch() {
  return &delta_f_pucch_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
srsran_ue_ul_powerctrl_t::mutable_delta_f_pucch() {
  // @@protoc_insertion_point(field_mutable_list:fs.phy_rrc.srsran_ue_ul_powerctrl_t.delta_f_pucch)
  return _internal_mutable_delta_f_pucch();
}

// -------------------------------------------------------------------

// srsran_pusch_grant_t

// bool is_rar = 1;
inline void srsran_pusch_grant_t::clear_is_rar() {
  is_rar_ = false;
}
inline bool srsran_pusch_grant_t::_internal_is_rar() const {
  return is_rar_;
}
inline bool srsran_pusch_grant_t::is_rar() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_grant_t.is_rar)
  return _internal_is_rar();
}
inline void srsran_pusch_grant_t::_internal_set_is_rar(bool value) {
  
  is_rar_ = value;
}
inline void srsran_pusch_grant_t::set_is_rar(bool value) {
  _internal_set_is_rar(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_grant_t.is_rar)
}

// uint32 n_dmrs = 2;
inline void srsran_pusch_grant_t::clear_n_dmrs() {
  n_dmrs_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::_internal_n_dmrs() const {
  return n_dmrs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::n_dmrs() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_grant_t.n_dmrs)
  return _internal_n_dmrs();
}
inline void srsran_pusch_grant_t::_internal_set_n_dmrs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  n_dmrs_ = value;
}
inline void srsran_pusch_grant_t::set_n_dmrs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_n_dmrs(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_grant_t.n_dmrs)
}

// uint32 L_prb = 3;
inline void srsran_pusch_grant_t::clear_l_prb() {
  l_prb_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::_internal_l_prb() const {
  return l_prb_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::l_prb() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_grant_t.L_prb)
  return _internal_l_prb();
}
inline void srsran_pusch_grant_t::_internal_set_l_prb(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  l_prb_ = value;
}
inline void srsran_pusch_grant_t::set_l_prb(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_l_prb(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_grant_t.L_prb)
}

// uint32 freq_hopping = 4;
inline void srsran_pusch_grant_t::clear_freq_hopping() {
  freq_hopping_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::_internal_freq_hopping() const {
  return freq_hopping_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::freq_hopping() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_grant_t.freq_hopping)
  return _internal_freq_hopping();
}
inline void srsran_pusch_grant_t::_internal_set_freq_hopping(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  freq_hopping_ = value;
}
inline void srsran_pusch_grant_t::set_freq_hopping(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_freq_hopping(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_grant_t.freq_hopping)
}

// uint32 nof_re = 5;
inline void srsran_pusch_grant_t::clear_nof_re() {
  nof_re_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::_internal_nof_re() const {
  return nof_re_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::nof_re() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_grant_t.nof_re)
  return _internal_nof_re();
}
inline void srsran_pusch_grant_t::_internal_set_nof_re(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  nof_re_ = value;
}
inline void srsran_pusch_grant_t::set_nof_re(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_nof_re(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_grant_t.nof_re)
}

// uint32 nof_symb = 6;
inline void srsran_pusch_grant_t::clear_nof_symb() {
  nof_symb_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::_internal_nof_symb() const {
  return nof_symb_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::nof_symb() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_grant_t.nof_symb)
  return _internal_nof_symb();
}
inline void srsran_pusch_grant_t::_internal_set_nof_symb(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  nof_symb_ = value;
}
inline void srsran_pusch_grant_t::set_nof_symb(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_nof_symb(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_grant_t.nof_symb)
}

// .fs.mac_rrc.srsran_ra_tb_t tb = 7;
inline bool srsran_pusch_grant_t::_internal_has_tb() const {
  return this != internal_default_instance() && tb_ != nullptr;
}
inline bool srsran_pusch_grant_t::has_tb() const {
  return _internal_has_tb();
}
inline const ::fs::mac_rrc::srsran_ra_tb_t& srsran_pusch_grant_t::_internal_tb() const {
  const ::fs::mac_rrc::srsran_ra_tb_t* p = tb_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::mac_rrc::srsran_ra_tb_t*>(
      &::fs::mac_rrc::_srsran_ra_tb_t_default_instance_);
}
inline const ::fs::mac_rrc::srsran_ra_tb_t& srsran_pusch_grant_t::tb() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_grant_t.tb)
  return _internal_tb();
}
inline void srsran_pusch_grant_t::unsafe_arena_set_allocated_tb(
    ::fs::mac_rrc::srsran_ra_tb_t* tb) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tb_);
  }
  tb_ = tb;
  if (tb) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.srsran_pusch_grant_t.tb)
}
inline ::fs::mac_rrc::srsran_ra_tb_t* srsran_pusch_grant_t::release_tb() {
  auto temp = unsafe_arena_release_tb();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::mac_rrc::srsran_ra_tb_t* srsran_pusch_grant_t::unsafe_arena_release_tb() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.srsran_pusch_grant_t.tb)
  
  ::fs::mac_rrc::srsran_ra_tb_t* temp = tb_;
  tb_ = nullptr;
  return temp;
}
inline ::fs::mac_rrc::srsran_ra_tb_t* srsran_pusch_grant_t::_internal_mutable_tb() {
  
  if (tb_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::mac_rrc::srsran_ra_tb_t>(GetArena());
    tb_ = p;
  }
  return tb_;
}
inline ::fs::mac_rrc::srsran_ra_tb_t* srsran_pusch_grant_t::mutable_tb() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_pusch_grant_t.tb)
  return _internal_mutable_tb();
}
inline void srsran_pusch_grant_t::set_allocated_tb(::fs::mac_rrc::srsran_ra_tb_t* tb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(tb_);
  }
  if (tb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tb)->GetArena();
    if (message_arena != submessage_arena) {
      tb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tb, submessage_arena);
    }
    
  } else {
    
  }
  tb_ = tb;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.srsran_pusch_grant_t.tb)
}

// .fs.mac_rrc.srsran_ra_tb_t last_tb = 8;
inline bool srsran_pusch_grant_t::_internal_has_last_tb() const {
  return this != internal_default_instance() && last_tb_ != nullptr;
}
inline bool srsran_pusch_grant_t::has_last_tb() const {
  return _internal_has_last_tb();
}
inline const ::fs::mac_rrc::srsran_ra_tb_t& srsran_pusch_grant_t::_internal_last_tb() const {
  const ::fs::mac_rrc::srsran_ra_tb_t* p = last_tb_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::mac_rrc::srsran_ra_tb_t*>(
      &::fs::mac_rrc::_srsran_ra_tb_t_default_instance_);
}
inline const ::fs::mac_rrc::srsran_ra_tb_t& srsran_pusch_grant_t::last_tb() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_grant_t.last_tb)
  return _internal_last_tb();
}
inline void srsran_pusch_grant_t::unsafe_arena_set_allocated_last_tb(
    ::fs::mac_rrc::srsran_ra_tb_t* last_tb) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_tb_);
  }
  last_tb_ = last_tb;
  if (last_tb) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.srsran_pusch_grant_t.last_tb)
}
inline ::fs::mac_rrc::srsran_ra_tb_t* srsran_pusch_grant_t::release_last_tb() {
  auto temp = unsafe_arena_release_last_tb();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::mac_rrc::srsran_ra_tb_t* srsran_pusch_grant_t::unsafe_arena_release_last_tb() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.srsran_pusch_grant_t.last_tb)
  
  ::fs::mac_rrc::srsran_ra_tb_t* temp = last_tb_;
  last_tb_ = nullptr;
  return temp;
}
inline ::fs::mac_rrc::srsran_ra_tb_t* srsran_pusch_grant_t::_internal_mutable_last_tb() {
  
  if (last_tb_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::mac_rrc::srsran_ra_tb_t>(GetArena());
    last_tb_ = p;
  }
  return last_tb_;
}
inline ::fs::mac_rrc::srsran_ra_tb_t* srsran_pusch_grant_t::mutable_last_tb() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_pusch_grant_t.last_tb)
  return _internal_mutable_last_tb();
}
inline void srsran_pusch_grant_t::set_allocated_last_tb(::fs::mac_rrc::srsran_ra_tb_t* last_tb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_tb_);
  }
  if (last_tb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(last_tb)->GetArena();
    if (message_arena != submessage_arena) {
      last_tb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, last_tb, submessage_arena);
    }
    
  } else {
    
  }
  last_tb_ = last_tb;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.srsran_pusch_grant_t.last_tb)
}

// repeated uint32 n_prb = 9;
inline int srsran_pusch_grant_t::_internal_n_prb_size() const {
  return n_prb_.size();
}
inline int srsran_pusch_grant_t::n_prb_size() const {
  return _internal_n_prb_size();
}
inline void srsran_pusch_grant_t::clear_n_prb() {
  n_prb_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::_internal_n_prb(int index) const {
  return n_prb_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::n_prb(int index) const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_grant_t.n_prb)
  return _internal_n_prb(index);
}
inline void srsran_pusch_grant_t::set_n_prb(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  n_prb_.Set(index, value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_grant_t.n_prb)
}
inline void srsran_pusch_grant_t::_internal_add_n_prb(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  n_prb_.Add(value);
}
inline void srsran_pusch_grant_t::add_n_prb(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_n_prb(value);
  // @@protoc_insertion_point(field_add:fs.phy_rrc.srsran_pusch_grant_t.n_prb)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
srsran_pusch_grant_t::_internal_n_prb() const {
  return n_prb_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
srsran_pusch_grant_t::n_prb() const {
  // @@protoc_insertion_point(field_list:fs.phy_rrc.srsran_pusch_grant_t.n_prb)
  return _internal_n_prb();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
srsran_pusch_grant_t::_internal_mutable_n_prb() {
  return &n_prb_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
srsran_pusch_grant_t::mutable_n_prb() {
  // @@protoc_insertion_point(field_mutable_list:fs.phy_rrc.srsran_pusch_grant_t.n_prb)
  return _internal_mutable_n_prb();
}

// repeated uint32 n_prb_tilde = 10;
inline int srsran_pusch_grant_t::_internal_n_prb_tilde_size() const {
  return n_prb_tilde_.size();
}
inline int srsran_pusch_grant_t::n_prb_tilde_size() const {
  return _internal_n_prb_tilde_size();
}
inline void srsran_pusch_grant_t::clear_n_prb_tilde() {
  n_prb_tilde_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::_internal_n_prb_tilde(int index) const {
  return n_prb_tilde_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_grant_t::n_prb_tilde(int index) const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_grant_t.n_prb_tilde)
  return _internal_n_prb_tilde(index);
}
inline void srsran_pusch_grant_t::set_n_prb_tilde(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  n_prb_tilde_.Set(index, value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_grant_t.n_prb_tilde)
}
inline void srsran_pusch_grant_t::_internal_add_n_prb_tilde(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  n_prb_tilde_.Add(value);
}
inline void srsran_pusch_grant_t::add_n_prb_tilde(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_n_prb_tilde(value);
  // @@protoc_insertion_point(field_add:fs.phy_rrc.srsran_pusch_grant_t.n_prb_tilde)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
srsran_pusch_grant_t::_internal_n_prb_tilde() const {
  return n_prb_tilde_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
srsran_pusch_grant_t::n_prb_tilde() const {
  // @@protoc_insertion_point(field_list:fs.phy_rrc.srsran_pusch_grant_t.n_prb_tilde)
  return _internal_n_prb_tilde();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
srsran_pusch_grant_t::_internal_mutable_n_prb_tilde() {
  return &n_prb_tilde_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
srsran_pusch_grant_t::mutable_n_prb_tilde() {
  // @@protoc_insertion_point(field_mutable_list:fs.phy_rrc.srsran_pusch_grant_t.n_prb_tilde)
  return _internal_mutable_n_prb_tilde();
}

// -------------------------------------------------------------------

// srsran_pusch_cfg_t

// uint32 rnti = 1;
inline void srsran_pusch_cfg_t::clear_rnti() {
  rnti_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_cfg_t::_internal_rnti() const {
  return rnti_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_cfg_t::rnti() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.rnti)
  return _internal_rnti();
}
inline void srsran_pusch_cfg_t::_internal_set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rnti_ = value;
}
inline void srsran_pusch_cfg_t::set_rnti(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rnti(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_cfg_t.rnti)
}

// uint32 max_nof_iterations = 2;
inline void srsran_pusch_cfg_t::clear_max_nof_iterations() {
  max_nof_iterations_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_cfg_t::_internal_max_nof_iterations() const {
  return max_nof_iterations_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_cfg_t::max_nof_iterations() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.max_nof_iterations)
  return _internal_max_nof_iterations();
}
inline void srsran_pusch_cfg_t::_internal_set_max_nof_iterations(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  max_nof_iterations_ = value;
}
inline void srsran_pusch_cfg_t::set_max_nof_iterations(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_nof_iterations(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_cfg_t.max_nof_iterations)
}

// uint32 last_O_cqi = 3;
inline void srsran_pusch_cfg_t::clear_last_o_cqi() {
  last_o_cqi_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_cfg_t::_internal_last_o_cqi() const {
  return last_o_cqi_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_cfg_t::last_o_cqi() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.last_O_cqi)
  return _internal_last_o_cqi();
}
inline void srsran_pusch_cfg_t::_internal_set_last_o_cqi(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_o_cqi_ = value;
}
inline void srsran_pusch_cfg_t::set_last_o_cqi(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_o_cqi(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_cfg_t.last_O_cqi)
}

// uint32 K_segm = 4;
inline void srsran_pusch_cfg_t::clear_k_segm() {
  k_segm_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_cfg_t::_internal_k_segm() const {
  return k_segm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_cfg_t::k_segm() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.K_segm)
  return _internal_k_segm();
}
inline void srsran_pusch_cfg_t::_internal_set_k_segm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  k_segm_ = value;
}
inline void srsran_pusch_cfg_t::set_k_segm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_k_segm(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_cfg_t.K_segm)
}

// uint32 current_tx_nb = 5;
inline void srsran_pusch_cfg_t::clear_current_tx_nb() {
  current_tx_nb_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_cfg_t::_internal_current_tx_nb() const {
  return current_tx_nb_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_cfg_t::current_tx_nb() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.current_tx_nb)
  return _internal_current_tx_nb();
}
inline void srsran_pusch_cfg_t::_internal_set_current_tx_nb(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  current_tx_nb_ = value;
}
inline void srsran_pusch_cfg_t::set_current_tx_nb(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_tx_nb(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_cfg_t.current_tx_nb)
}

// bool csi_enable = 6;
inline void srsran_pusch_cfg_t::clear_csi_enable() {
  csi_enable_ = false;
}
inline bool srsran_pusch_cfg_t::_internal_csi_enable() const {
  return csi_enable_;
}
inline bool srsran_pusch_cfg_t::csi_enable() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.csi_enable)
  return _internal_csi_enable();
}
inline void srsran_pusch_cfg_t::_internal_set_csi_enable(bool value) {
  
  csi_enable_ = value;
}
inline void srsran_pusch_cfg_t::set_csi_enable(bool value) {
  _internal_set_csi_enable(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_cfg_t.csi_enable)
}

// bool enable_64qam = 7;
inline void srsran_pusch_cfg_t::clear_enable_64qam() {
  enable_64qam_ = false;
}
inline bool srsran_pusch_cfg_t::_internal_enable_64qam() const {
  return enable_64qam_;
}
inline bool srsran_pusch_cfg_t::enable_64qam() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.enable_64qam)
  return _internal_enable_64qam();
}
inline void srsran_pusch_cfg_t::_internal_set_enable_64qam(bool value) {
  
  enable_64qam_ = value;
}
inline void srsran_pusch_cfg_t::set_enable_64qam(bool value) {
  _internal_set_enable_64qam(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_cfg_t.enable_64qam)
}

// bool meas_time_en = 8;
inline void srsran_pusch_cfg_t::clear_meas_time_en() {
  meas_time_en_ = false;
}
inline bool srsran_pusch_cfg_t::_internal_meas_time_en() const {
  return meas_time_en_;
}
inline bool srsran_pusch_cfg_t::meas_time_en() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.meas_time_en)
  return _internal_meas_time_en();
}
inline void srsran_pusch_cfg_t::_internal_set_meas_time_en(bool value) {
  
  meas_time_en_ = value;
}
inline void srsran_pusch_cfg_t::set_meas_time_en(bool value) {
  _internal_set_meas_time_en(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_cfg_t.meas_time_en)
}

// uint32 meas_time_value = 9;
inline void srsran_pusch_cfg_t::clear_meas_time_value() {
  meas_time_value_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_cfg_t::_internal_meas_time_value() const {
  return meas_time_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 srsran_pusch_cfg_t::meas_time_value() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.meas_time_value)
  return _internal_meas_time_value();
}
inline void srsran_pusch_cfg_t::_internal_set_meas_time_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  meas_time_value_ = value;
}
inline void srsran_pusch_cfg_t::set_meas_time_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_meas_time_value(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_cfg_t.meas_time_value)
}

// bool meas_epre_en = 10;
inline void srsran_pusch_cfg_t::clear_meas_epre_en() {
  meas_epre_en_ = false;
}
inline bool srsran_pusch_cfg_t::_internal_meas_epre_en() const {
  return meas_epre_en_;
}
inline bool srsran_pusch_cfg_t::meas_epre_en() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.meas_epre_en)
  return _internal_meas_epre_en();
}
inline void srsran_pusch_cfg_t::_internal_set_meas_epre_en(bool value) {
  
  meas_epre_en_ = value;
}
inline void srsran_pusch_cfg_t::set_meas_epre_en(bool value) {
  _internal_set_meas_epre_en(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_cfg_t.meas_epre_en)
}

// bool meas_ta_en = 11;
inline void srsran_pusch_cfg_t::clear_meas_ta_en() {
  meas_ta_en_ = false;
}
inline bool srsran_pusch_cfg_t::_internal_meas_ta_en() const {
  return meas_ta_en_;
}
inline bool srsran_pusch_cfg_t::meas_ta_en() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.meas_ta_en)
  return _internal_meas_ta_en();
}
inline void srsran_pusch_cfg_t::_internal_set_meas_ta_en(bool value) {
  
  meas_ta_en_ = value;
}
inline void srsran_pusch_cfg_t::set_meas_ta_en(bool value) {
  _internal_set_meas_ta_en(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_cfg_t.meas_ta_en)
}

// bool meas_evm_en = 12;
inline void srsran_pusch_cfg_t::clear_meas_evm_en() {
  meas_evm_en_ = false;
}
inline bool srsran_pusch_cfg_t::_internal_meas_evm_en() const {
  return meas_evm_en_;
}
inline bool srsran_pusch_cfg_t::meas_evm_en() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.meas_evm_en)
  return _internal_meas_evm_en();
}
inline void srsran_pusch_cfg_t::_internal_set_meas_evm_en(bool value) {
  
  meas_evm_en_ = value;
}
inline void srsran_pusch_cfg_t::set_meas_evm_en(bool value) {
  _internal_set_meas_evm_en(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.srsran_pusch_cfg_t.meas_evm_en)
}

// .fs.mac_rrc.srsran_uci_cfg_t uci_cfg = 13;
inline bool srsran_pusch_cfg_t::_internal_has_uci_cfg() const {
  return this != internal_default_instance() && uci_cfg_ != nullptr;
}
inline bool srsran_pusch_cfg_t::has_uci_cfg() const {
  return _internal_has_uci_cfg();
}
inline const ::fs::mac_rrc::srsran_uci_cfg_t& srsran_pusch_cfg_t::_internal_uci_cfg() const {
  const ::fs::mac_rrc::srsran_uci_cfg_t* p = uci_cfg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::mac_rrc::srsran_uci_cfg_t*>(
      &::fs::mac_rrc::_srsran_uci_cfg_t_default_instance_);
}
inline const ::fs::mac_rrc::srsran_uci_cfg_t& srsran_pusch_cfg_t::uci_cfg() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.uci_cfg)
  return _internal_uci_cfg();
}
inline void srsran_pusch_cfg_t::unsafe_arena_set_allocated_uci_cfg(
    ::fs::mac_rrc::srsran_uci_cfg_t* uci_cfg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(uci_cfg_);
  }
  uci_cfg_ = uci_cfg;
  if (uci_cfg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.srsran_pusch_cfg_t.uci_cfg)
}
inline ::fs::mac_rrc::srsran_uci_cfg_t* srsran_pusch_cfg_t::release_uci_cfg() {
  auto temp = unsafe_arena_release_uci_cfg();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::mac_rrc::srsran_uci_cfg_t* srsran_pusch_cfg_t::unsafe_arena_release_uci_cfg() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.srsran_pusch_cfg_t.uci_cfg)
  
  ::fs::mac_rrc::srsran_uci_cfg_t* temp = uci_cfg_;
  uci_cfg_ = nullptr;
  return temp;
}
inline ::fs::mac_rrc::srsran_uci_cfg_t* srsran_pusch_cfg_t::_internal_mutable_uci_cfg() {
  
  if (uci_cfg_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::mac_rrc::srsran_uci_cfg_t>(GetArena());
    uci_cfg_ = p;
  }
  return uci_cfg_;
}
inline ::fs::mac_rrc::srsran_uci_cfg_t* srsran_pusch_cfg_t::mutable_uci_cfg() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_pusch_cfg_t.uci_cfg)
  return _internal_mutable_uci_cfg();
}
inline void srsran_pusch_cfg_t::set_allocated_uci_cfg(::fs::mac_rrc::srsran_uci_cfg_t* uci_cfg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(uci_cfg_);
  }
  if (uci_cfg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(uci_cfg)->GetArena();
    if (message_arena != submessage_arena) {
      uci_cfg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uci_cfg, submessage_arena);
    }
    
  } else {
    
  }
  uci_cfg_ = uci_cfg;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.srsran_pusch_cfg_t.uci_cfg)
}

// .fs.mac_rrc.srsran_uci_offset_cfg_t uci_offset = 14;
inline bool srsran_pusch_cfg_t::_internal_has_uci_offset() const {
  return this != internal_default_instance() && uci_offset_ != nullptr;
}
inline bool srsran_pusch_cfg_t::has_uci_offset() const {
  return _internal_has_uci_offset();
}
inline const ::fs::mac_rrc::srsran_uci_offset_cfg_t& srsran_pusch_cfg_t::_internal_uci_offset() const {
  const ::fs::mac_rrc::srsran_uci_offset_cfg_t* p = uci_offset_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::mac_rrc::srsran_uci_offset_cfg_t*>(
      &::fs::mac_rrc::_srsran_uci_offset_cfg_t_default_instance_);
}
inline const ::fs::mac_rrc::srsran_uci_offset_cfg_t& srsran_pusch_cfg_t::uci_offset() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.uci_offset)
  return _internal_uci_offset();
}
inline void srsran_pusch_cfg_t::unsafe_arena_set_allocated_uci_offset(
    ::fs::mac_rrc::srsran_uci_offset_cfg_t* uci_offset) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(uci_offset_);
  }
  uci_offset_ = uci_offset;
  if (uci_offset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.srsran_pusch_cfg_t.uci_offset)
}
inline ::fs::mac_rrc::srsran_uci_offset_cfg_t* srsran_pusch_cfg_t::release_uci_offset() {
  auto temp = unsafe_arena_release_uci_offset();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::mac_rrc::srsran_uci_offset_cfg_t* srsran_pusch_cfg_t::unsafe_arena_release_uci_offset() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.srsran_pusch_cfg_t.uci_offset)
  
  ::fs::mac_rrc::srsran_uci_offset_cfg_t* temp = uci_offset_;
  uci_offset_ = nullptr;
  return temp;
}
inline ::fs::mac_rrc::srsran_uci_offset_cfg_t* srsran_pusch_cfg_t::_internal_mutable_uci_offset() {
  
  if (uci_offset_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::mac_rrc::srsran_uci_offset_cfg_t>(GetArena());
    uci_offset_ = p;
  }
  return uci_offset_;
}
inline ::fs::mac_rrc::srsran_uci_offset_cfg_t* srsran_pusch_cfg_t::mutable_uci_offset() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_pusch_cfg_t.uci_offset)
  return _internal_mutable_uci_offset();
}
inline void srsran_pusch_cfg_t::set_allocated_uci_offset(::fs::mac_rrc::srsran_uci_offset_cfg_t* uci_offset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(uci_offset_);
  }
  if (uci_offset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(uci_offset)->GetArena();
    if (message_arena != submessage_arena) {
      uci_offset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uci_offset, submessage_arena);
    }
    
  } else {
    
  }
  uci_offset_ = uci_offset;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.srsran_pusch_cfg_t.uci_offset)
}

// .fs.phy_rrc.srsran_pusch_grant_t grant = 15;
inline bool srsran_pusch_cfg_t::_internal_has_grant() const {
  return this != internal_default_instance() && grant_ != nullptr;
}
inline bool srsran_pusch_cfg_t::has_grant() const {
  return _internal_has_grant();
}
inline void srsran_pusch_cfg_t::clear_grant() {
  if (GetArena() == nullptr && grant_ != nullptr) {
    delete grant_;
  }
  grant_ = nullptr;
}
inline const ::fs::phy_rrc::srsran_pusch_grant_t& srsran_pusch_cfg_t::_internal_grant() const {
  const ::fs::phy_rrc::srsran_pusch_grant_t* p = grant_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::phy_rrc::srsran_pusch_grant_t*>(
      &::fs::phy_rrc::_srsran_pusch_grant_t_default_instance_);
}
inline const ::fs::phy_rrc::srsran_pusch_grant_t& srsran_pusch_cfg_t::grant() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.grant)
  return _internal_grant();
}
inline void srsran_pusch_cfg_t::unsafe_arena_set_allocated_grant(
    ::fs::phy_rrc::srsran_pusch_grant_t* grant) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(grant_);
  }
  grant_ = grant;
  if (grant) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.srsran_pusch_cfg_t.grant)
}
inline ::fs::phy_rrc::srsran_pusch_grant_t* srsran_pusch_cfg_t::release_grant() {
  auto temp = unsafe_arena_release_grant();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::phy_rrc::srsran_pusch_grant_t* srsran_pusch_cfg_t::unsafe_arena_release_grant() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.srsran_pusch_cfg_t.grant)
  
  ::fs::phy_rrc::srsran_pusch_grant_t* temp = grant_;
  grant_ = nullptr;
  return temp;
}
inline ::fs::phy_rrc::srsran_pusch_grant_t* srsran_pusch_cfg_t::_internal_mutable_grant() {
  
  if (grant_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::phy_rrc::srsran_pusch_grant_t>(GetArena());
    grant_ = p;
  }
  return grant_;
}
inline ::fs::phy_rrc::srsran_pusch_grant_t* srsran_pusch_cfg_t::mutable_grant() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_pusch_cfg_t.grant)
  return _internal_mutable_grant();
}
inline void srsran_pusch_cfg_t::set_allocated_grant(::fs::phy_rrc::srsran_pusch_grant_t* grant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete grant_;
  }
  if (grant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(grant);
    if (message_arena != submessage_arena) {
      grant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, grant, submessage_arena);
    }
    
  } else {
    
  }
  grant_ = grant;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.srsran_pusch_cfg_t.grant)
}

// repeated .fs.mac_rrc.srsran_softbuffer_tx_t tx = 16;
inline int srsran_pusch_cfg_t::_internal_tx_size() const {
  return tx_.size();
}
inline int srsran_pusch_cfg_t::tx_size() const {
  return _internal_tx_size();
}
inline ::fs::mac_rrc::srsran_softbuffer_tx_t* srsran_pusch_cfg_t::mutable_tx(int index) {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_pusch_cfg_t.tx)
  return tx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::mac_rrc::srsran_softbuffer_tx_t >*
srsran_pusch_cfg_t::mutable_tx() {
  // @@protoc_insertion_point(field_mutable_list:fs.phy_rrc.srsran_pusch_cfg_t.tx)
  return &tx_;
}
inline const ::fs::mac_rrc::srsran_softbuffer_tx_t& srsran_pusch_cfg_t::_internal_tx(int index) const {
  return tx_.Get(index);
}
inline const ::fs::mac_rrc::srsran_softbuffer_tx_t& srsran_pusch_cfg_t::tx(int index) const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.tx)
  return _internal_tx(index);
}
inline ::fs::mac_rrc::srsran_softbuffer_tx_t* srsran_pusch_cfg_t::_internal_add_tx() {
  return tx_.Add();
}
inline ::fs::mac_rrc::srsran_softbuffer_tx_t* srsran_pusch_cfg_t::add_tx() {
  // @@protoc_insertion_point(field_add:fs.phy_rrc.srsran_pusch_cfg_t.tx)
  return _internal_add_tx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::mac_rrc::srsran_softbuffer_tx_t >&
srsran_pusch_cfg_t::tx() const {
  // @@protoc_insertion_point(field_list:fs.phy_rrc.srsran_pusch_cfg_t.tx)
  return tx_;
}

// repeated .fs.mac_rrc.srsran_softbuffer_rx_t rx = 17;
inline int srsran_pusch_cfg_t::_internal_rx_size() const {
  return rx_.size();
}
inline int srsran_pusch_cfg_t::rx_size() const {
  return _internal_rx_size();
}
inline ::fs::mac_rrc::srsran_softbuffer_rx_t* srsran_pusch_cfg_t::mutable_rx(int index) {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_pusch_cfg_t.rx)
  return rx_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::mac_rrc::srsran_softbuffer_rx_t >*
srsran_pusch_cfg_t::mutable_rx() {
  // @@protoc_insertion_point(field_mutable_list:fs.phy_rrc.srsran_pusch_cfg_t.rx)
  return &rx_;
}
inline const ::fs::mac_rrc::srsran_softbuffer_rx_t& srsran_pusch_cfg_t::_internal_rx(int index) const {
  return rx_.Get(index);
}
inline const ::fs::mac_rrc::srsran_softbuffer_rx_t& srsran_pusch_cfg_t::rx(int index) const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_pusch_cfg_t.rx)
  return _internal_rx(index);
}
inline ::fs::mac_rrc::srsran_softbuffer_rx_t* srsran_pusch_cfg_t::_internal_add_rx() {
  return rx_.Add();
}
inline ::fs::mac_rrc::srsran_softbuffer_rx_t* srsran_pusch_cfg_t::add_rx() {
  // @@protoc_insertion_point(field_add:fs.phy_rrc.srsran_pusch_cfg_t.rx)
  return _internal_add_rx();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::mac_rrc::srsran_softbuffer_rx_t >&
srsran_pusch_cfg_t::rx() const {
  // @@protoc_insertion_point(field_list:fs.phy_rrc.srsran_pusch_cfg_t.rx)
  return rx_;
}

// -------------------------------------------------------------------

// srsran_ul_cfg_t

// .fs.mac_rrc.srsran_pucch_cfg_t pucch = 1;
inline bool srsran_ul_cfg_t::_internal_has_pucch() const {
  return this != internal_default_instance() && pucch_ != nullptr;
}
inline bool srsran_ul_cfg_t::has_pucch() const {
  return _internal_has_pucch();
}
inline const ::fs::mac_rrc::srsran_pucch_cfg_t& srsran_ul_cfg_t::_internal_pucch() const {
  const ::fs::mac_rrc::srsran_pucch_cfg_t* p = pucch_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::mac_rrc::srsran_pucch_cfg_t*>(
      &::fs::mac_rrc::_srsran_pucch_cfg_t_default_instance_);
}
inline const ::fs::mac_rrc::srsran_pucch_cfg_t& srsran_ul_cfg_t::pucch() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ul_cfg_t.pucch)
  return _internal_pucch();
}
inline void srsran_ul_cfg_t::unsafe_arena_set_allocated_pucch(
    ::fs::mac_rrc::srsran_pucch_cfg_t* pucch) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pucch_);
  }
  pucch_ = pucch;
  if (pucch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.srsran_ul_cfg_t.pucch)
}
inline ::fs::mac_rrc::srsran_pucch_cfg_t* srsran_ul_cfg_t::release_pucch() {
  auto temp = unsafe_arena_release_pucch();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::mac_rrc::srsran_pucch_cfg_t* srsran_ul_cfg_t::unsafe_arena_release_pucch() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.srsran_ul_cfg_t.pucch)
  
  ::fs::mac_rrc::srsran_pucch_cfg_t* temp = pucch_;
  pucch_ = nullptr;
  return temp;
}
inline ::fs::mac_rrc::srsran_pucch_cfg_t* srsran_ul_cfg_t::_internal_mutable_pucch() {
  
  if (pucch_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::mac_rrc::srsran_pucch_cfg_t>(GetArena());
    pucch_ = p;
  }
  return pucch_;
}
inline ::fs::mac_rrc::srsran_pucch_cfg_t* srsran_ul_cfg_t::mutable_pucch() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_ul_cfg_t.pucch)
  return _internal_mutable_pucch();
}
inline void srsran_ul_cfg_t::set_allocated_pucch(::fs::mac_rrc::srsran_pucch_cfg_t* pucch) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pucch_);
  }
  if (pucch) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pucch)->GetArena();
    if (message_arena != submessage_arena) {
      pucch = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pucch, submessage_arena);
    }
    
  } else {
    
  }
  pucch_ = pucch;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.srsran_ul_cfg_t.pucch)
}

// .fs.mac_rrc.srsran_pusch_hopping_cfg_t hopping = 2;
inline bool srsran_ul_cfg_t::_internal_has_hopping() const {
  return this != internal_default_instance() && hopping_ != nullptr;
}
inline bool srsran_ul_cfg_t::has_hopping() const {
  return _internal_has_hopping();
}
inline const ::fs::mac_rrc::srsran_pusch_hopping_cfg_t& srsran_ul_cfg_t::_internal_hopping() const {
  const ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* p = hopping_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::mac_rrc::srsran_pusch_hopping_cfg_t*>(
      &::fs::mac_rrc::_srsran_pusch_hopping_cfg_t_default_instance_);
}
inline const ::fs::mac_rrc::srsran_pusch_hopping_cfg_t& srsran_ul_cfg_t::hopping() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ul_cfg_t.hopping)
  return _internal_hopping();
}
inline void srsran_ul_cfg_t::unsafe_arena_set_allocated_hopping(
    ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* hopping) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hopping_);
  }
  hopping_ = hopping;
  if (hopping) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.srsran_ul_cfg_t.hopping)
}
inline ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* srsran_ul_cfg_t::release_hopping() {
  auto temp = unsafe_arena_release_hopping();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* srsran_ul_cfg_t::unsafe_arena_release_hopping() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.srsran_ul_cfg_t.hopping)
  
  ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* temp = hopping_;
  hopping_ = nullptr;
  return temp;
}
inline ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* srsran_ul_cfg_t::_internal_mutable_hopping() {
  
  if (hopping_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::mac_rrc::srsran_pusch_hopping_cfg_t>(GetArena());
    hopping_ = p;
  }
  return hopping_;
}
inline ::fs::mac_rrc::srsran_pusch_hopping_cfg_t* srsran_ul_cfg_t::mutable_hopping() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_ul_cfg_t.hopping)
  return _internal_mutable_hopping();
}
inline void srsran_ul_cfg_t::set_allocated_hopping(::fs::mac_rrc::srsran_pusch_hopping_cfg_t* hopping) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hopping_);
  }
  if (hopping) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hopping)->GetArena();
    if (message_arena != submessage_arena) {
      hopping = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hopping, submessage_arena);
    }
    
  } else {
    
  }
  hopping_ = hopping;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.srsran_ul_cfg_t.hopping)
}

// .fs.phy_rrc.srsran_pusch_cfg_t pusch = 3;
inline bool srsran_ul_cfg_t::_internal_has_pusch() const {
  return this != internal_default_instance() && pusch_ != nullptr;
}
inline bool srsran_ul_cfg_t::has_pusch() const {
  return _internal_has_pusch();
}
inline void srsran_ul_cfg_t::clear_pusch() {
  if (GetArena() == nullptr && pusch_ != nullptr) {
    delete pusch_;
  }
  pusch_ = nullptr;
}
inline const ::fs::phy_rrc::srsran_pusch_cfg_t& srsran_ul_cfg_t::_internal_pusch() const {
  const ::fs::phy_rrc::srsran_pusch_cfg_t* p = pusch_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::phy_rrc::srsran_pusch_cfg_t*>(
      &::fs::phy_rrc::_srsran_pusch_cfg_t_default_instance_);
}
inline const ::fs::phy_rrc::srsran_pusch_cfg_t& srsran_ul_cfg_t::pusch() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ul_cfg_t.pusch)
  return _internal_pusch();
}
inline void srsran_ul_cfg_t::unsafe_arena_set_allocated_pusch(
    ::fs::phy_rrc::srsran_pusch_cfg_t* pusch) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pusch_);
  }
  pusch_ = pusch;
  if (pusch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.srsran_ul_cfg_t.pusch)
}
inline ::fs::phy_rrc::srsran_pusch_cfg_t* srsran_ul_cfg_t::release_pusch() {
  auto temp = unsafe_arena_release_pusch();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::phy_rrc::srsran_pusch_cfg_t* srsran_ul_cfg_t::unsafe_arena_release_pusch() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.srsran_ul_cfg_t.pusch)
  
  ::fs::phy_rrc::srsran_pusch_cfg_t* temp = pusch_;
  pusch_ = nullptr;
  return temp;
}
inline ::fs::phy_rrc::srsran_pusch_cfg_t* srsran_ul_cfg_t::_internal_mutable_pusch() {
  
  if (pusch_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::phy_rrc::srsran_pusch_cfg_t>(GetArena());
    pusch_ = p;
  }
  return pusch_;
}
inline ::fs::phy_rrc::srsran_pusch_cfg_t* srsran_ul_cfg_t::mutable_pusch() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_ul_cfg_t.pusch)
  return _internal_mutable_pusch();
}
inline void srsran_ul_cfg_t::set_allocated_pusch(::fs::phy_rrc::srsran_pusch_cfg_t* pusch) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete pusch_;
  }
  if (pusch) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(pusch);
    if (message_arena != submessage_arena) {
      pusch = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pusch, submessage_arena);
    }
    
  } else {
    
  }
  pusch_ = pusch;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.srsran_ul_cfg_t.pusch)
}

// .fs.phy_rrc.srsran_ue_ul_powerctrl_t power_ctrl = 4;
inline bool srsran_ul_cfg_t::_internal_has_power_ctrl() const {
  return this != internal_default_instance() && power_ctrl_ != nullptr;
}
inline bool srsran_ul_cfg_t::has_power_ctrl() const {
  return _internal_has_power_ctrl();
}
inline void srsran_ul_cfg_t::clear_power_ctrl() {
  if (GetArena() == nullptr && power_ctrl_ != nullptr) {
    delete power_ctrl_;
  }
  power_ctrl_ = nullptr;
}
inline const ::fs::phy_rrc::srsran_ue_ul_powerctrl_t& srsran_ul_cfg_t::_internal_power_ctrl() const {
  const ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* p = power_ctrl_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::phy_rrc::srsran_ue_ul_powerctrl_t*>(
      &::fs::phy_rrc::_srsran_ue_ul_powerctrl_t_default_instance_);
}
inline const ::fs::phy_rrc::srsran_ue_ul_powerctrl_t& srsran_ul_cfg_t::power_ctrl() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ul_cfg_t.power_ctrl)
  return _internal_power_ctrl();
}
inline void srsran_ul_cfg_t::unsafe_arena_set_allocated_power_ctrl(
    ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* power_ctrl) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(power_ctrl_);
  }
  power_ctrl_ = power_ctrl;
  if (power_ctrl) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.srsran_ul_cfg_t.power_ctrl)
}
inline ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* srsran_ul_cfg_t::release_power_ctrl() {
  auto temp = unsafe_arena_release_power_ctrl();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* srsran_ul_cfg_t::unsafe_arena_release_power_ctrl() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.srsran_ul_cfg_t.power_ctrl)
  
  ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* temp = power_ctrl_;
  power_ctrl_ = nullptr;
  return temp;
}
inline ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* srsran_ul_cfg_t::_internal_mutable_power_ctrl() {
  
  if (power_ctrl_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::phy_rrc::srsran_ue_ul_powerctrl_t>(GetArena());
    power_ctrl_ = p;
  }
  return power_ctrl_;
}
inline ::fs::phy_rrc::srsran_ue_ul_powerctrl_t* srsran_ul_cfg_t::mutable_power_ctrl() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_ul_cfg_t.power_ctrl)
  return _internal_mutable_power_ctrl();
}
inline void srsran_ul_cfg_t::set_allocated_power_ctrl(::fs::phy_rrc::srsran_ue_ul_powerctrl_t* power_ctrl) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete power_ctrl_;
  }
  if (power_ctrl) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(power_ctrl);
    if (message_arena != submessage_arena) {
      power_ctrl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, power_ctrl, submessage_arena);
    }
    
  } else {
    
  }
  power_ctrl_ = power_ctrl;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.srsran_ul_cfg_t.power_ctrl)
}

// .fs.phy_rrc.srsran_refsignal_dmrs_pusch_cfg_t dmrs = 5;
inline bool srsran_ul_cfg_t::_internal_has_dmrs() const {
  return this != internal_default_instance() && dmrs_ != nullptr;
}
inline bool srsran_ul_cfg_t::has_dmrs() const {
  return _internal_has_dmrs();
}
inline void srsran_ul_cfg_t::clear_dmrs() {
  if (GetArena() == nullptr && dmrs_ != nullptr) {
    delete dmrs_;
  }
  dmrs_ = nullptr;
}
inline const ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t& srsran_ul_cfg_t::_internal_dmrs() const {
  const ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* p = dmrs_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t*>(
      &::fs::phy_rrc::_srsran_refsignal_dmrs_pusch_cfg_t_default_instance_);
}
inline const ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t& srsran_ul_cfg_t::dmrs() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ul_cfg_t.dmrs)
  return _internal_dmrs();
}
inline void srsran_ul_cfg_t::unsafe_arena_set_allocated_dmrs(
    ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* dmrs) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dmrs_);
  }
  dmrs_ = dmrs;
  if (dmrs) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.srsran_ul_cfg_t.dmrs)
}
inline ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* srsran_ul_cfg_t::release_dmrs() {
  auto temp = unsafe_arena_release_dmrs();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* srsran_ul_cfg_t::unsafe_arena_release_dmrs() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.srsran_ul_cfg_t.dmrs)
  
  ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* temp = dmrs_;
  dmrs_ = nullptr;
  return temp;
}
inline ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* srsran_ul_cfg_t::_internal_mutable_dmrs() {
  
  if (dmrs_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t>(GetArena());
    dmrs_ = p;
  }
  return dmrs_;
}
inline ::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* srsran_ul_cfg_t::mutable_dmrs() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_ul_cfg_t.dmrs)
  return _internal_mutable_dmrs();
}
inline void srsran_ul_cfg_t::set_allocated_dmrs(::fs::phy_rrc::srsran_refsignal_dmrs_pusch_cfg_t* dmrs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dmrs_;
  }
  if (dmrs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dmrs);
    if (message_arena != submessage_arena) {
      dmrs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dmrs, submessage_arena);
    }
    
  } else {
    
  }
  dmrs_ = dmrs;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.srsran_ul_cfg_t.dmrs)
}

// .fs.phy_rrc.srsran_refsignal_srs_cfg_t srs = 6;
inline bool srsran_ul_cfg_t::_internal_has_srs() const {
  return this != internal_default_instance() && srs_ != nullptr;
}
inline bool srsran_ul_cfg_t::has_srs() const {
  return _internal_has_srs();
}
inline void srsran_ul_cfg_t::clear_srs() {
  if (GetArena() == nullptr && srs_ != nullptr) {
    delete srs_;
  }
  srs_ = nullptr;
}
inline const ::fs::phy_rrc::srsran_refsignal_srs_cfg_t& srsran_ul_cfg_t::_internal_srs() const {
  const ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* p = srs_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::phy_rrc::srsran_refsignal_srs_cfg_t*>(
      &::fs::phy_rrc::_srsran_refsignal_srs_cfg_t_default_instance_);
}
inline const ::fs::phy_rrc::srsran_refsignal_srs_cfg_t& srsran_ul_cfg_t::srs() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.srsran_ul_cfg_t.srs)
  return _internal_srs();
}
inline void srsran_ul_cfg_t::unsafe_arena_set_allocated_srs(
    ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* srs) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(srs_);
  }
  srs_ = srs;
  if (srs) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.srsran_ul_cfg_t.srs)
}
inline ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* srsran_ul_cfg_t::release_srs() {
  auto temp = unsafe_arena_release_srs();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* srsran_ul_cfg_t::unsafe_arena_release_srs() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.srsran_ul_cfg_t.srs)
  
  ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* temp = srs_;
  srs_ = nullptr;
  return temp;
}
inline ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* srsran_ul_cfg_t::_internal_mutable_srs() {
  
  if (srs_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::phy_rrc::srsran_refsignal_srs_cfg_t>(GetArena());
    srs_ = p;
  }
  return srs_;
}
inline ::fs::phy_rrc::srsran_refsignal_srs_cfg_t* srsran_ul_cfg_t::mutable_srs() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.srsran_ul_cfg_t.srs)
  return _internal_mutable_srs();
}
inline void srsran_ul_cfg_t::set_allocated_srs(::fs::phy_rrc::srsran_refsignal_srs_cfg_t* srs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete srs_;
  }
  if (srs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(srs);
    if (message_arena != submessage_arena) {
      srs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, srs, submessage_arena);
    }
    
  } else {
    
  }
  srs_ = srs;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.srsran_ul_cfg_t.srs)
}

// -------------------------------------------------------------------

// phy_cfg_t

// bool prach_cfg_present = 1;
inline void phy_cfg_t::clear_prach_cfg_present() {
  prach_cfg_present_ = false;
}
inline bool phy_cfg_t::_internal_prach_cfg_present() const {
  return prach_cfg_present_;
}
inline bool phy_cfg_t::prach_cfg_present() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.phy_cfg_t.prach_cfg_present)
  return _internal_prach_cfg_present();
}
inline void phy_cfg_t::_internal_set_prach_cfg_present(bool value) {
  
  prach_cfg_present_ = value;
}
inline void phy_cfg_t::set_prach_cfg_present(bool value) {
  _internal_set_prach_cfg_present(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.phy_cfg_t.prach_cfg_present)
}

// .fs.mac_rrc.srsran_dl_cfg_t dl_cfg = 2;
inline bool phy_cfg_t::_internal_has_dl_cfg() const {
  return this != internal_default_instance() && dl_cfg_ != nullptr;
}
inline bool phy_cfg_t::has_dl_cfg() const {
  return _internal_has_dl_cfg();
}
inline const ::fs::mac_rrc::srsran_dl_cfg_t& phy_cfg_t::_internal_dl_cfg() const {
  const ::fs::mac_rrc::srsran_dl_cfg_t* p = dl_cfg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::mac_rrc::srsran_dl_cfg_t*>(
      &::fs::mac_rrc::_srsran_dl_cfg_t_default_instance_);
}
inline const ::fs::mac_rrc::srsran_dl_cfg_t& phy_cfg_t::dl_cfg() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.phy_cfg_t.dl_cfg)
  return _internal_dl_cfg();
}
inline void phy_cfg_t::unsafe_arena_set_allocated_dl_cfg(
    ::fs::mac_rrc::srsran_dl_cfg_t* dl_cfg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dl_cfg_);
  }
  dl_cfg_ = dl_cfg;
  if (dl_cfg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.phy_cfg_t.dl_cfg)
}
inline ::fs::mac_rrc::srsran_dl_cfg_t* phy_cfg_t::release_dl_cfg() {
  auto temp = unsafe_arena_release_dl_cfg();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::mac_rrc::srsran_dl_cfg_t* phy_cfg_t::unsafe_arena_release_dl_cfg() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.phy_cfg_t.dl_cfg)
  
  ::fs::mac_rrc::srsran_dl_cfg_t* temp = dl_cfg_;
  dl_cfg_ = nullptr;
  return temp;
}
inline ::fs::mac_rrc::srsran_dl_cfg_t* phy_cfg_t::_internal_mutable_dl_cfg() {
  
  if (dl_cfg_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::mac_rrc::srsran_dl_cfg_t>(GetArena());
    dl_cfg_ = p;
  }
  return dl_cfg_;
}
inline ::fs::mac_rrc::srsran_dl_cfg_t* phy_cfg_t::mutable_dl_cfg() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.phy_cfg_t.dl_cfg)
  return _internal_mutable_dl_cfg();
}
inline void phy_cfg_t::set_allocated_dl_cfg(::fs::mac_rrc::srsran_dl_cfg_t* dl_cfg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dl_cfg_);
  }
  if (dl_cfg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dl_cfg)->GetArena();
    if (message_arena != submessage_arena) {
      dl_cfg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dl_cfg, submessage_arena);
    }
    
  } else {
    
  }
  dl_cfg_ = dl_cfg;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.phy_cfg_t.dl_cfg)
}

// .fs.phy_rrc.srsran_ul_cfg_t ul_cfg = 3;
inline bool phy_cfg_t::_internal_has_ul_cfg() const {
  return this != internal_default_instance() && ul_cfg_ != nullptr;
}
inline bool phy_cfg_t::has_ul_cfg() const {
  return _internal_has_ul_cfg();
}
inline void phy_cfg_t::clear_ul_cfg() {
  if (GetArena() == nullptr && ul_cfg_ != nullptr) {
    delete ul_cfg_;
  }
  ul_cfg_ = nullptr;
}
inline const ::fs::phy_rrc::srsran_ul_cfg_t& phy_cfg_t::_internal_ul_cfg() const {
  const ::fs::phy_rrc::srsran_ul_cfg_t* p = ul_cfg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::phy_rrc::srsran_ul_cfg_t*>(
      &::fs::phy_rrc::_srsran_ul_cfg_t_default_instance_);
}
inline const ::fs::phy_rrc::srsran_ul_cfg_t& phy_cfg_t::ul_cfg() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.phy_cfg_t.ul_cfg)
  return _internal_ul_cfg();
}
inline void phy_cfg_t::unsafe_arena_set_allocated_ul_cfg(
    ::fs::phy_rrc::srsran_ul_cfg_t* ul_cfg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ul_cfg_);
  }
  ul_cfg_ = ul_cfg;
  if (ul_cfg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.phy_cfg_t.ul_cfg)
}
inline ::fs::phy_rrc::srsran_ul_cfg_t* phy_cfg_t::release_ul_cfg() {
  auto temp = unsafe_arena_release_ul_cfg();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::phy_rrc::srsran_ul_cfg_t* phy_cfg_t::unsafe_arena_release_ul_cfg() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.phy_cfg_t.ul_cfg)
  
  ::fs::phy_rrc::srsran_ul_cfg_t* temp = ul_cfg_;
  ul_cfg_ = nullptr;
  return temp;
}
inline ::fs::phy_rrc::srsran_ul_cfg_t* phy_cfg_t::_internal_mutable_ul_cfg() {
  
  if (ul_cfg_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::phy_rrc::srsran_ul_cfg_t>(GetArena());
    ul_cfg_ = p;
  }
  return ul_cfg_;
}
inline ::fs::phy_rrc::srsran_ul_cfg_t* phy_cfg_t::mutable_ul_cfg() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.phy_cfg_t.ul_cfg)
  return _internal_mutable_ul_cfg();
}
inline void phy_cfg_t::set_allocated_ul_cfg(::fs::phy_rrc::srsran_ul_cfg_t* ul_cfg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete ul_cfg_;
  }
  if (ul_cfg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ul_cfg);
    if (message_arena != submessage_arena) {
      ul_cfg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ul_cfg, submessage_arena);
    }
    
  } else {
    
  }
  ul_cfg_ = ul_cfg;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.phy_cfg_t.ul_cfg)
}

// .fs.phy_rrc.srsran_prach_cfg_t prach_cfg = 4;
inline bool phy_cfg_t::_internal_has_prach_cfg() const {
  return this != internal_default_instance() && prach_cfg_ != nullptr;
}
inline bool phy_cfg_t::has_prach_cfg() const {
  return _internal_has_prach_cfg();
}
inline void phy_cfg_t::clear_prach_cfg() {
  if (GetArena() == nullptr && prach_cfg_ != nullptr) {
    delete prach_cfg_;
  }
  prach_cfg_ = nullptr;
}
inline const ::fs::phy_rrc::srsran_prach_cfg_t& phy_cfg_t::_internal_prach_cfg() const {
  const ::fs::phy_rrc::srsran_prach_cfg_t* p = prach_cfg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::phy_rrc::srsran_prach_cfg_t*>(
      &::fs::phy_rrc::_srsran_prach_cfg_t_default_instance_);
}
inline const ::fs::phy_rrc::srsran_prach_cfg_t& phy_cfg_t::prach_cfg() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.phy_cfg_t.prach_cfg)
  return _internal_prach_cfg();
}
inline void phy_cfg_t::unsafe_arena_set_allocated_prach_cfg(
    ::fs::phy_rrc::srsran_prach_cfg_t* prach_cfg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(prach_cfg_);
  }
  prach_cfg_ = prach_cfg;
  if (prach_cfg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.phy_cfg_t.prach_cfg)
}
inline ::fs::phy_rrc::srsran_prach_cfg_t* phy_cfg_t::release_prach_cfg() {
  auto temp = unsafe_arena_release_prach_cfg();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::phy_rrc::srsran_prach_cfg_t* phy_cfg_t::unsafe_arena_release_prach_cfg() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.phy_cfg_t.prach_cfg)
  
  ::fs::phy_rrc::srsran_prach_cfg_t* temp = prach_cfg_;
  prach_cfg_ = nullptr;
  return temp;
}
inline ::fs::phy_rrc::srsran_prach_cfg_t* phy_cfg_t::_internal_mutable_prach_cfg() {
  
  if (prach_cfg_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::phy_rrc::srsran_prach_cfg_t>(GetArena());
    prach_cfg_ = p;
  }
  return prach_cfg_;
}
inline ::fs::phy_rrc::srsran_prach_cfg_t* phy_cfg_t::mutable_prach_cfg() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.phy_cfg_t.prach_cfg)
  return _internal_mutable_prach_cfg();
}
inline void phy_cfg_t::set_allocated_prach_cfg(::fs::phy_rrc::srsran_prach_cfg_t* prach_cfg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete prach_cfg_;
  }
  if (prach_cfg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(prach_cfg);
    if (message_arena != submessage_arena) {
      prach_cfg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, prach_cfg, submessage_arena);
    }
    
  } else {
    
  }
  prach_cfg_ = prach_cfg;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.phy_cfg_t.prach_cfg)
}

// -------------------------------------------------------------------

// phy_rrc_cfg_t

// bool configured = 1;
inline void phy_rrc_cfg_t::clear_configured() {
  configured_ = false;
}
inline bool phy_rrc_cfg_t::_internal_configured() const {
  return configured_;
}
inline bool phy_rrc_cfg_t::configured() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.phy_rrc_cfg_t.configured)
  return _internal_configured();
}
inline void phy_rrc_cfg_t::_internal_set_configured(bool value) {
  
  configured_ = value;
}
inline void phy_rrc_cfg_t::set_configured(bool value) {
  _internal_set_configured(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.phy_rrc_cfg_t.configured)
}

// uint32 enb_cc_idx = 2;
inline void phy_rrc_cfg_t::clear_enb_cc_idx() {
  enb_cc_idx_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 phy_rrc_cfg_t::_internal_enb_cc_idx() const {
  return enb_cc_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 phy_rrc_cfg_t::enb_cc_idx() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.phy_rrc_cfg_t.enb_cc_idx)
  return _internal_enb_cc_idx();
}
inline void phy_rrc_cfg_t::_internal_set_enb_cc_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  enb_cc_idx_ = value;
}
inline void phy_rrc_cfg_t::set_enb_cc_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_enb_cc_idx(value);
  // @@protoc_insertion_point(field_set:fs.phy_rrc.phy_rrc_cfg_t.enb_cc_idx)
}

// .fs.phy_rrc.phy_cfg_t phy_cfg = 3;
inline bool phy_rrc_cfg_t::_internal_has_phy_cfg() const {
  return this != internal_default_instance() && phy_cfg_ != nullptr;
}
inline bool phy_rrc_cfg_t::has_phy_cfg() const {
  return _internal_has_phy_cfg();
}
inline void phy_rrc_cfg_t::clear_phy_cfg() {
  if (GetArena() == nullptr && phy_cfg_ != nullptr) {
    delete phy_cfg_;
  }
  phy_cfg_ = nullptr;
}
inline const ::fs::phy_rrc::phy_cfg_t& phy_rrc_cfg_t::_internal_phy_cfg() const {
  const ::fs::phy_rrc::phy_cfg_t* p = phy_cfg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fs::phy_rrc::phy_cfg_t*>(
      &::fs::phy_rrc::_phy_cfg_t_default_instance_);
}
inline const ::fs::phy_rrc::phy_cfg_t& phy_rrc_cfg_t::phy_cfg() const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.phy_rrc_cfg_t.phy_cfg)
  return _internal_phy_cfg();
}
inline void phy_rrc_cfg_t::unsafe_arena_set_allocated_phy_cfg(
    ::fs::phy_rrc::phy_cfg_t* phy_cfg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(phy_cfg_);
  }
  phy_cfg_ = phy_cfg;
  if (phy_cfg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fs.phy_rrc.phy_rrc_cfg_t.phy_cfg)
}
inline ::fs::phy_rrc::phy_cfg_t* phy_rrc_cfg_t::release_phy_cfg() {
  auto temp = unsafe_arena_release_phy_cfg();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fs::phy_rrc::phy_cfg_t* phy_rrc_cfg_t::unsafe_arena_release_phy_cfg() {
  // @@protoc_insertion_point(field_release:fs.phy_rrc.phy_rrc_cfg_t.phy_cfg)
  
  ::fs::phy_rrc::phy_cfg_t* temp = phy_cfg_;
  phy_cfg_ = nullptr;
  return temp;
}
inline ::fs::phy_rrc::phy_cfg_t* phy_rrc_cfg_t::_internal_mutable_phy_cfg() {
  
  if (phy_cfg_ == nullptr) {
    auto* p = CreateMaybeMessage<::fs::phy_rrc::phy_cfg_t>(GetArena());
    phy_cfg_ = p;
  }
  return phy_cfg_;
}
inline ::fs::phy_rrc::phy_cfg_t* phy_rrc_cfg_t::mutable_phy_cfg() {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.phy_rrc_cfg_t.phy_cfg)
  return _internal_mutable_phy_cfg();
}
inline void phy_rrc_cfg_t::set_allocated_phy_cfg(::fs::phy_rrc::phy_cfg_t* phy_cfg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete phy_cfg_;
  }
  if (phy_cfg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(phy_cfg);
    if (message_arena != submessage_arena) {
      phy_cfg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, phy_cfg, submessage_arena);
    }
    
  } else {
    
  }
  phy_cfg_ = phy_cfg;
  // @@protoc_insertion_point(field_set_allocated:fs.phy_rrc.phy_rrc_cfg_t.phy_cfg)
}

// -------------------------------------------------------------------

// phy_rrc_cfg_list_t

// repeated .fs.phy_rrc.phy_rrc_cfg_t list = 1;
inline int phy_rrc_cfg_list_t::_internal_list_size() const {
  return list_.size();
}
inline int phy_rrc_cfg_list_t::list_size() const {
  return _internal_list_size();
}
inline void phy_rrc_cfg_list_t::clear_list() {
  list_.Clear();
}
inline ::fs::phy_rrc::phy_rrc_cfg_t* phy_rrc_cfg_list_t::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:fs.phy_rrc.phy_rrc_cfg_list_t.list)
  return list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::phy_rrc::phy_rrc_cfg_t >*
phy_rrc_cfg_list_t::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:fs.phy_rrc.phy_rrc_cfg_list_t.list)
  return &list_;
}
inline const ::fs::phy_rrc::phy_rrc_cfg_t& phy_rrc_cfg_list_t::_internal_list(int index) const {
  return list_.Get(index);
}
inline const ::fs::phy_rrc::phy_rrc_cfg_t& phy_rrc_cfg_list_t::list(int index) const {
  // @@protoc_insertion_point(field_get:fs.phy_rrc.phy_rrc_cfg_list_t.list)
  return _internal_list(index);
}
inline ::fs::phy_rrc::phy_rrc_cfg_t* phy_rrc_cfg_list_t::_internal_add_list() {
  return list_.Add();
}
inline ::fs::phy_rrc::phy_rrc_cfg_t* phy_rrc_cfg_list_t::add_list() {
  // @@protoc_insertion_point(field_add:fs.phy_rrc.phy_rrc_cfg_list_t.list)
  return _internal_add_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::fs::phy_rrc::phy_rrc_cfg_t >&
phy_rrc_cfg_list_t::list() const {
  // @@protoc_insertion_point(field_list:fs.phy_rrc.phy_rrc_cfg_list_t.list)
  return list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace phy_rrc
}  // namespace fs

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_phy_5frrc_5fcfg_5ft_2eproto
